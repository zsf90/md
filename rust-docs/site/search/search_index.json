{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u6b22\u8fce\u6765\u7684\u6211\u7684 Rust \u7f16\u7a0b\u7b14\u8bb0\u7ad9\u70b9 \u8bbf\u95ee Rust \u5b98\u7f51 rust-lang.org . \u76f8\u5173\u7ad9\u70b9 Rust \u5305\u4ed3\u5e93 https://crates.io/ \u5728\u7ebf\u7f16\u8bd1 Rust https://play.rust-lang.org/ \u516c\u5f00\u5e93\u7684\u6587\u6863\u7ad9\u70b9 https://docs.rs/ \u5b98\u65b9\u5b66\u4e60\u5bfc\u822a https://www.rust-lang.org/zh-CN/learn","title":"\u9996\u9875"},{"location":"#rust","text":"\u8bbf\u95ee Rust \u5b98\u7f51 rust-lang.org .","title":"\u6b22\u8fce\u6765\u7684\u6211\u7684 Rust \u7f16\u7a0b\u7b14\u8bb0\u7ad9\u70b9"},{"location":"#_1","text":"Rust \u5305\u4ed3\u5e93 https://crates.io/ \u5728\u7ebf\u7f16\u8bd1 Rust https://play.rust-lang.org/ \u516c\u5f00\u5e93\u7684\u6587\u6863\u7ad9\u70b9 https://docs.rs/ \u5b98\u65b9\u5b66\u4e60\u5bfc\u822a https://www.rust-lang.org/zh-CN/learn","title":"\u76f8\u5173\u7ad9\u70b9"},{"location":"Trait/","text":"","title":"Trait"},{"location":"about/","text":"\u8fd9\u662f\u6211\u7684 mkdocs \u7ad9\u70b9 \u5728 zsf90.github.io/md/xxx \u4e0b\u6709\u591a\u4e2a\u7528 mkdocs \u7ad9\u70b9\uff0c\u8fd9\u4e9b\u7ad9\u70b9\u5305\u542b\u4e0d\u540c\u7684\u5185\u5bb9\u3002 \u5b50\u7ad9\u70b9\u5217\u8868 \u547d\u4ee4\u6587\u6863 \u7f16\u7a0b\u8bed\u8a00 \u7535\u5b50\u6280\u672f","title":"About"},{"location":"about/#mkdocs","text":"\u5728 zsf90.github.io/md/xxx \u4e0b\u6709\u591a\u4e2a\u7528 mkdocs \u7ad9\u70b9\uff0c\u8fd9\u4e9b\u7ad9\u70b9\u5305\u542b\u4e0d\u540c\u7684\u5185\u5bb9\u3002","title":"\u8fd9\u662f\u6211\u7684 mkdocs \u7ad9\u70b9"},{"location":"about/#_1","text":"\u547d\u4ee4\u6587\u6863 \u7f16\u7a0b\u8bed\u8a00 \u7535\u5b50\u6280\u672f","title":"\u5b50\u7ad9\u70b9\u5217\u8868"},{"location":"data-type/","text":"Rust \u662f\u9759\u6001\u7c7b\u578b\u7684\u7f16\u7a0b\u8bed\u8a00\uff0c\u6bcf\u4e2a\u53d8\u91cf\u5728\u7f16\u8bd1\u65f6\u5fc5\u987b\u76f4\u5230\u6240\u6709 \u53d8\u91cf\u7684\u7c7b\u578b\u3002 \u6807\u91cf\u7c7b\u578b \u6807\u91cf (scalar) \u7c7b\u578b\u4ee3\u8868\u4e00\u4e2a\u5355\u72ec\u7684\u503c\u3002 Rust \u6709\u56db\u79cd\u57fa\u672c\u7684\u6807\u91cf\u7c7b\u578b\uff1a \u6574\u578b \u3001 \u6d6e\u70b9\u578b \u3001 \u5e03\u5c14\u7c7b\u578b \u548c \u5b57\u7b26\u7c7b\u578b \u3002 \u6574\u578b \u957f\u5ea6 \u6709\u7b26\u53f7 \u65e0\u7b26\u53f7 8-bit i8 u8 16-bit i16 u16 32-bit i32 u32 64-bit i64 u64 128-bit i128 u128 arch isize usize Rust \u4e2d\u6574\u578b\u5b57\u9762\u503c\uff1a \u6570\u5b57\u5b57\u9762\u503c \u4f8b\u5b50 Decimal (\u5341\u8fdb\u5236) 98_222 Hex (\u5341\u516d\u8fdb\u5236) 0xff Octal (\u516b\u8fdb\u5236) 0o77 Binary (\u4e8c\u8fdb\u5236) 0b1111_0000 Byte (\u5355\u5b57\u8282\u5b57\u7b26)(\u4ec5\u9650\u4e8eu8) b'A' \u6d6e\u70b9\u578b Rust \u4e5f\u6709\u4e24\u4e2a\u539f\u751f\u7684 \u6d6e\u70b9\u6570\uff08floating-point numbers\uff09\u7c7b\u578b\uff0c\u5b83\u4eec\u662f\u5e26\u5c0f\u6570\u70b9\u7684\u6570\u5b57\u3002Rust \u7684\u6d6e\u70b9\u6570\u7c7b\u578b\u662f f32 \u548c f64\uff0c\u5206\u522b\u5360 32 \u4f4d\u548c 64 \u4f4d\u3002\u9ed8\u8ba4\u7c7b\u578b\u662f f64\uff0c\u56e0\u4e3a\u5728\u73b0\u4ee3 CPU \u4e2d\uff0c\u5b83\u4e0e f32 \u901f\u5ea6\u51e0\u4e4e\u4e00\u6837\uff0c\u4e0d\u8fc7\u7cbe\u5ea6\u66f4\u9ad8\u3002\u6240\u6709\u7684\u6d6e\u70b9\u578b\u90fd\u662f\u6709\u7b26\u53f7\u7684\u3002 \u4f8b\u5b50\uff1a fn main() { let x = 2.0; // f64 let y: f32 = 3.0; // f32 } \u5e03\u5c14\u7c7b\u578b \u6b63\u5982\u5176\u4ed6\u5927\u90e8\u5206\u7f16\u7a0b\u8bed\u8a00\u4e00\u6837\uff0cRust \u4e2d\u7684\u5e03\u5c14\u7c7b\u578b\u6709\u4e24\u4e2a\u53ef\u80fd\u7684\u503c\uff1atrue \u548c false\u3002Rust \u4e2d\u7684\u5e03\u5c14\u7c7b\u578b\u4f7f\u7528 bool \u8868\u793a\u3002\u4f8b\u5982\uff1a fn main() { let t = true; let f: bool = false; // with explicit type annotation } \u5b57\u7b26\u7c7b\u578b Rust\u7684 char \u7c7b\u578b\u662f\u8bed\u8a00\u4e2d\u6700\u539f\u751f\u7684\u5b57\u6bcd\u7c7b\u578b\u3002\u4e0b\u9762\u662f\u4e00\u4e9b\u58f0\u660e char \u503c\u7684\u4f8b\u5b50\uff1a fn main() { let c = 'z'; let z: char = '\u2124'; // with explicit type annotation let heart_eyed_cat = '\ud83d\ude3b'; } \u590d\u5408\u7c7b\u578b \u590d\u5408\u7c7b\u578b\uff08Compound types\uff09\u53ef\u4ee5\u5c06\u591a\u4e2a\u503c\u7ec4\u5408\u6210\u4e00\u4e2a\u7c7b\u578b\u3002Rust \u6709\u4e24\u4e2a\u539f\u751f\u7684\u590d\u5408\u7c7b\u578b\uff1a\u5143\u7ec4\uff08tuple\uff09\u548c\u6570\u7ec4\uff08array\uff09\u3002 \u5143\u7ec4\u7c7b\u578b \u5143\u7ec4\u662f\u4e00\u4e2a\u5c06\u591a\u4e2a\u5176\u4ed6\u7c7b\u578b\u7684\u503c\u7ec4\u5408\u8fdb\u4e00\u4e2a\u590d\u5408\u7c7b\u578b\u7684\u4e3b\u8981\u65b9\u5f0f\u3002\u5143\u7ec4\u957f\u5ea6\u56fa\u5b9a\uff1a\u4e00\u65e6\u58f0\u660e\uff0c\u5176\u957f\u5ea6\u4e0d\u4f1a\u589e\u5927\u6216\u7f29\u5c0f\u3002 \u6211\u4eec\u4f7f\u7528\u5305\u542b\u5728\u5706\u62ec\u53f7\u4e2d\u7684\u9017\u53f7\u5206\u9694\u7684\u503c\u5217\u8868\u6765\u521b\u5efa\u4e00\u4e2a\u5143\u7ec4\u3002\u5143\u7ec4\u4e2d\u7684\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u90fd\u6709\u4e00\u4e2a\u7c7b\u578b\uff0c\u800c\u4e14\u8fd9\u4e9b\u4e0d\u540c\u503c\u7684\u7c7b\u578b\u4e5f\u4e0d\u5fc5\u662f\u76f8\u540c\u7684\u3002\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u4f7f\u7528\u4e86\u53ef\u9009\u7684\u7c7b\u578b\u6ce8\u89e3\uff1a fn main() { let tup = (500, 3.2, 2); let (mut x, y, z) = tup; println!(\"x: {}, y: {}, z: {}\", x, y, z); x = 44; println!(\"x: {}, y: {}, z: {}\", x, y, z); println!(\"tup.0: {}\", tup.0); } } \u6570\u7ec4\u7c7b\u578b \u53e6\u4e00\u4e2a\u5305\u542b\u591a\u4e2a\u503c\u7684\u65b9\u5f0f\u662f \u6570\u7ec4\uff08array\uff09\u3002\u4e0e\u5143\u7ec4\u4e0d\u540c\uff0c\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u7684\u7c7b\u578b\u5fc5\u987b\u76f8\u540c\u3002Rust \u4e2d\u7684\u6570\u7ec4\u4e0e\u4e00\u4e9b\u5176\u4ed6\u8bed\u8a00\u4e2d\u7684\u6570\u7ec4\u4e0d\u540c\uff0cRust\u4e2d\u7684\u6570\u7ec4\u957f\u5ea6\u662f\u56fa\u5b9a\u7684\u3002 fn main() { let a = [1, 2, 3, 4, 5]; for i in a.iter() { println!(\"i: {}\", i); } let months = [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\", ]; for i in months.iter() { println!(\"{}\", i); } } let a: [i32; 5] = [1, 2, 3, 4, 5]; // a \u4e3a 5 \u4e2a i32 \u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u5e76\u4e14\u8d4b\u521d\u503c let b = [10; 5]; // \u5206\u914db\u4e3a 5\u4e2a 10\u7684\u6570\u7ec4 for i in a { println!(\"{}\", i); } \u6444\u6c0f\u6e29\u5ea6\u8f6c\u534e\u6c0f\u6e29\u5ea6 \u7b2c\u4e00\u4e2a\u7248\u672c fn main() { fahrenheit_to_celsius(); } fn fahrenheit_to_celsius() { let mut result: f64 = 0.0; let mut celsius = String::new(); // \u6444\u6c0f\u5ea6 let mut fahrenheit = String::new(); // \u534e\u6c0f\u5ea6 let mut to_type = String::new(); // \u4e3a 0 \u6444\u6c0f\u5ea6\u8f6c\u534e\u6c0f\u5ea6\uff0c\u4e3a 1 \u534e\u6c0f\u5ea6\u8f6c\u6444\u6c0f\u5ea6 println!(\"\u8bf7\u9009\u62e9\u8f6c\u6362\u7c7b\u578b(\u8f93\u5165 '0' \u4ee3\u8868\u6444\u6c0f\u6e29\u5ea6\u8f6c\u534e\u6c0f\u6e29\u5ea6\uff0c\u8f93\u5165'1' \u4ee3\u8868\u534e\u6c0f\u6e29\u5ea6\u8f6c\u6444\u6c0f\u6e29\u5ea6)\"); // 1. \u8ba9\u7528\u6237\u9009\u62e9\u8f6c\u6362\u7c7b\u578b std::io::stdin() .read_line(&mut to_type) .expect(\"\u8bfb\u53d6\u6570\u636e\u5931\u8d25\"); let to_type: u8 = to_type.trim().parse().expect(\"\u6570\u636e\u89e3\u6790\u5931\u8d25\"); if to_type == 0 { // F = 9 / 5C + 32 println!(\"\u8bf7\u8f93\u5165\u6444\u6c0f\u6e29\u5ea6\"); std::io::stdin() .read_line(&mut celsius) .expect(\"\u6570\u636e\u8bfb\u53d6\u5931\u8d25\"); let celsius: f64 = celsius.trim().parse().expect(\"\u6570\u636e\u89e3\u6790\u5931\u8d25\"); result = 9.0 / 5.0 * celsius + 32.0; } else if to_type == 1 { // C = 5 / 9 (F-32) println!(\"\u8bf7\u8f93\u5165\u534e\u6c0f\u6e29\u5ea6\"); std::io::stdin() .read_line(&mut fahrenheit) .expect(\"\u6570\u636e\u8bfb\u53d6\u5931\u8d25\"); let fahrenheit: f64 = fahrenheit.trim().parse().expect(\"\u6570\u636e\u89e3\u6790\u5931\u8d25\"); result = 5.0 / 9.0 * (fahrenheit - 32.0); } else { println!(\"\u8bf7\u9009\u62e9 0 \u6216 1\"); } println!(\"\u7ed3\u679c\u4e3a\uff1a{}\", result); } \u6539\u8fdb\u7248\u672c fn main() { fahrenheit_to_celsius(); } fn fahrenheit_to_celsius() { let mut celsius = String::new(); // \u6444\u6c0f\u5ea6 let mut fahrenheit = String::new(); // \u534e\u6c0f\u5ea6 let mut to_type = String::new(); // \u4e3a 0 \u6444\u6c0f\u5ea6\u8f6c\u534e\u6c0f\u5ea6\uff0c\u4e3a 1 \u534e\u6c0f\u5ea6\u8f6c\u6444\u6c0f\u5ea6 println!(\"\u8bf7\u9009\u62e9\u8f6c\u6362\u7c7b\u578b(\u8f93\u5165 '0' \u4ee3\u8868\u6444\u6c0f\u6e29\u5ea6\u8f6c\u534e\u6c0f\u6e29\u5ea6\uff0c\u8f93\u5165'1' \u4ee3\u8868\u534e\u6c0f\u6e29\u5ea6\u8f6c\u6444\u6c0f\u6e29\u5ea6)\"); // 1. \u8ba9\u7528\u6237\u9009\u62e9\u8f6c\u6362\u7c7b\u578b std::io::stdin() .read_line(&mut to_type) .expect(\"\u8bfb\u53d6\u6570\u636e\u5931\u8d25\"); let to_type = match to_type.trim().parse() { Ok(v) => v, Err(e) => panic!(\"\u6570\u636e\u8f93\u5165\u7c7b\u578b\u9519\u8bef\uff1a{}\", e), }; let result = match to_type { 0 => { println!(\"\u8bf7\u8f93\u5165\u6444\u6c0f\u6e29\u5ea6\"); std::io::stdin() .read_line(&mut celsius) .expect(\"\u6570\u636e\u8bfb\u53d6\u5931\u8d25\"); let celsius: f64 = match celsius.trim().parse() { Ok(v) => v, Err(e) => panic!(\"\u6570\u636e\u8f93\u5165\u7c7b\u578b\u9519\u8bef\uff1a{}\", e), }; Some(9.0 / 5.0 * celsius + 32.0) } 1 => { // C = 5 / 9 (F-32) println!(\"\u8bf7\u8f93\u5165\u534e\u6c0f\u6e29\u5ea6\"); std::io::stdin() .read_line(&mut fahrenheit) .expect(\"\u6570\u636e\u8bfb\u53d6\u5931\u8d25\"); let fahrenheit: f64 = match fahrenheit.trim().parse() { Ok(v) => v, Err(e) => panic!(\"\u6570\u636e\u8f93\u5165\u7c7b\u578b\u9519\u8bef\uff1a{}\", e), }; Some(5.0 / 9.0 * (fahrenheit - 32.0)) } _ => None, }; match result { Some(v) => { println!(\"\u7ed3\u679c\u4e3a\uff1a{}\", v); } None => println!(\"\u9009\u62e9\u9519\u8bef!,\u53ea\u80fd\u8f93\u5165 0 \u6216 1\"), } }","title":"\u6570\u636e\u7c7b\u578b"},{"location":"data-type/#_1","text":"\u6807\u91cf (scalar) \u7c7b\u578b\u4ee3\u8868\u4e00\u4e2a\u5355\u72ec\u7684\u503c\u3002 Rust \u6709\u56db\u79cd\u57fa\u672c\u7684\u6807\u91cf\u7c7b\u578b\uff1a \u6574\u578b \u3001 \u6d6e\u70b9\u578b \u3001 \u5e03\u5c14\u7c7b\u578b \u548c \u5b57\u7b26\u7c7b\u578b \u3002","title":"\u6807\u91cf\u7c7b\u578b"},{"location":"data-type/#_2","text":"\u957f\u5ea6 \u6709\u7b26\u53f7 \u65e0\u7b26\u53f7 8-bit i8 u8 16-bit i16 u16 32-bit i32 u32 64-bit i64 u64 128-bit i128 u128 arch isize usize Rust \u4e2d\u6574\u578b\u5b57\u9762\u503c\uff1a \u6570\u5b57\u5b57\u9762\u503c \u4f8b\u5b50 Decimal (\u5341\u8fdb\u5236) 98_222 Hex (\u5341\u516d\u8fdb\u5236) 0xff Octal (\u516b\u8fdb\u5236) 0o77 Binary (\u4e8c\u8fdb\u5236) 0b1111_0000 Byte (\u5355\u5b57\u8282\u5b57\u7b26)(\u4ec5\u9650\u4e8eu8) b'A'","title":"\u6574\u578b"},{"location":"data-type/#_3","text":"Rust \u4e5f\u6709\u4e24\u4e2a\u539f\u751f\u7684 \u6d6e\u70b9\u6570\uff08floating-point numbers\uff09\u7c7b\u578b\uff0c\u5b83\u4eec\u662f\u5e26\u5c0f\u6570\u70b9\u7684\u6570\u5b57\u3002Rust \u7684\u6d6e\u70b9\u6570\u7c7b\u578b\u662f f32 \u548c f64\uff0c\u5206\u522b\u5360 32 \u4f4d\u548c 64 \u4f4d\u3002\u9ed8\u8ba4\u7c7b\u578b\u662f f64\uff0c\u56e0\u4e3a\u5728\u73b0\u4ee3 CPU \u4e2d\uff0c\u5b83\u4e0e f32 \u901f\u5ea6\u51e0\u4e4e\u4e00\u6837\uff0c\u4e0d\u8fc7\u7cbe\u5ea6\u66f4\u9ad8\u3002\u6240\u6709\u7684\u6d6e\u70b9\u578b\u90fd\u662f\u6709\u7b26\u53f7\u7684\u3002 \u4f8b\u5b50\uff1a fn main() { let x = 2.0; // f64 let y: f32 = 3.0; // f32 }","title":"\u6d6e\u70b9\u578b"},{"location":"data-type/#_4","text":"\u6b63\u5982\u5176\u4ed6\u5927\u90e8\u5206\u7f16\u7a0b\u8bed\u8a00\u4e00\u6837\uff0cRust \u4e2d\u7684\u5e03\u5c14\u7c7b\u578b\u6709\u4e24\u4e2a\u53ef\u80fd\u7684\u503c\uff1atrue \u548c false\u3002Rust \u4e2d\u7684\u5e03\u5c14\u7c7b\u578b\u4f7f\u7528 bool \u8868\u793a\u3002\u4f8b\u5982\uff1a fn main() { let t = true; let f: bool = false; // with explicit type annotation }","title":"\u5e03\u5c14\u7c7b\u578b"},{"location":"data-type/#_5","text":"Rust\u7684 char \u7c7b\u578b\u662f\u8bed\u8a00\u4e2d\u6700\u539f\u751f\u7684\u5b57\u6bcd\u7c7b\u578b\u3002\u4e0b\u9762\u662f\u4e00\u4e9b\u58f0\u660e char \u503c\u7684\u4f8b\u5b50\uff1a fn main() { let c = 'z'; let z: char = '\u2124'; // with explicit type annotation let heart_eyed_cat = '\ud83d\ude3b'; }","title":"\u5b57\u7b26\u7c7b\u578b"},{"location":"data-type/#_6","text":"\u590d\u5408\u7c7b\u578b\uff08Compound types\uff09\u53ef\u4ee5\u5c06\u591a\u4e2a\u503c\u7ec4\u5408\u6210\u4e00\u4e2a\u7c7b\u578b\u3002Rust \u6709\u4e24\u4e2a\u539f\u751f\u7684\u590d\u5408\u7c7b\u578b\uff1a\u5143\u7ec4\uff08tuple\uff09\u548c\u6570\u7ec4\uff08array\uff09\u3002","title":"\u590d\u5408\u7c7b\u578b"},{"location":"data-type/#_7","text":"\u5143\u7ec4\u662f\u4e00\u4e2a\u5c06\u591a\u4e2a\u5176\u4ed6\u7c7b\u578b\u7684\u503c\u7ec4\u5408\u8fdb\u4e00\u4e2a\u590d\u5408\u7c7b\u578b\u7684\u4e3b\u8981\u65b9\u5f0f\u3002\u5143\u7ec4\u957f\u5ea6\u56fa\u5b9a\uff1a\u4e00\u65e6\u58f0\u660e\uff0c\u5176\u957f\u5ea6\u4e0d\u4f1a\u589e\u5927\u6216\u7f29\u5c0f\u3002 \u6211\u4eec\u4f7f\u7528\u5305\u542b\u5728\u5706\u62ec\u53f7\u4e2d\u7684\u9017\u53f7\u5206\u9694\u7684\u503c\u5217\u8868\u6765\u521b\u5efa\u4e00\u4e2a\u5143\u7ec4\u3002\u5143\u7ec4\u4e2d\u7684\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u90fd\u6709\u4e00\u4e2a\u7c7b\u578b\uff0c\u800c\u4e14\u8fd9\u4e9b\u4e0d\u540c\u503c\u7684\u7c7b\u578b\u4e5f\u4e0d\u5fc5\u662f\u76f8\u540c\u7684\u3002\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u4f7f\u7528\u4e86\u53ef\u9009\u7684\u7c7b\u578b\u6ce8\u89e3\uff1a fn main() { let tup = (500, 3.2, 2); let (mut x, y, z) = tup; println!(\"x: {}, y: {}, z: {}\", x, y, z); x = 44; println!(\"x: {}, y: {}, z: {}\", x, y, z); println!(\"tup.0: {}\", tup.0); } }","title":"\u5143\u7ec4\u7c7b\u578b"},{"location":"data-type/#_8","text":"\u53e6\u4e00\u4e2a\u5305\u542b\u591a\u4e2a\u503c\u7684\u65b9\u5f0f\u662f \u6570\u7ec4\uff08array\uff09\u3002\u4e0e\u5143\u7ec4\u4e0d\u540c\uff0c\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u7684\u7c7b\u578b\u5fc5\u987b\u76f8\u540c\u3002Rust \u4e2d\u7684\u6570\u7ec4\u4e0e\u4e00\u4e9b\u5176\u4ed6\u8bed\u8a00\u4e2d\u7684\u6570\u7ec4\u4e0d\u540c\uff0cRust\u4e2d\u7684\u6570\u7ec4\u957f\u5ea6\u662f\u56fa\u5b9a\u7684\u3002 fn main() { let a = [1, 2, 3, 4, 5]; for i in a.iter() { println!(\"i: {}\", i); } let months = [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\", ]; for i in months.iter() { println!(\"{}\", i); } } let a: [i32; 5] = [1, 2, 3, 4, 5]; // a \u4e3a 5 \u4e2a i32 \u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u5e76\u4e14\u8d4b\u521d\u503c let b = [10; 5]; // \u5206\u914db\u4e3a 5\u4e2a 10\u7684\u6570\u7ec4 for i in a { println!(\"{}\", i); }","title":"\u6570\u7ec4\u7c7b\u578b"},{"location":"data-type/#_9","text":"\u7b2c\u4e00\u4e2a\u7248\u672c fn main() { fahrenheit_to_celsius(); } fn fahrenheit_to_celsius() { let mut result: f64 = 0.0; let mut celsius = String::new(); // \u6444\u6c0f\u5ea6 let mut fahrenheit = String::new(); // \u534e\u6c0f\u5ea6 let mut to_type = String::new(); // \u4e3a 0 \u6444\u6c0f\u5ea6\u8f6c\u534e\u6c0f\u5ea6\uff0c\u4e3a 1 \u534e\u6c0f\u5ea6\u8f6c\u6444\u6c0f\u5ea6 println!(\"\u8bf7\u9009\u62e9\u8f6c\u6362\u7c7b\u578b(\u8f93\u5165 '0' \u4ee3\u8868\u6444\u6c0f\u6e29\u5ea6\u8f6c\u534e\u6c0f\u6e29\u5ea6\uff0c\u8f93\u5165'1' \u4ee3\u8868\u534e\u6c0f\u6e29\u5ea6\u8f6c\u6444\u6c0f\u6e29\u5ea6)\"); // 1. \u8ba9\u7528\u6237\u9009\u62e9\u8f6c\u6362\u7c7b\u578b std::io::stdin() .read_line(&mut to_type) .expect(\"\u8bfb\u53d6\u6570\u636e\u5931\u8d25\"); let to_type: u8 = to_type.trim().parse().expect(\"\u6570\u636e\u89e3\u6790\u5931\u8d25\"); if to_type == 0 { // F = 9 / 5C + 32 println!(\"\u8bf7\u8f93\u5165\u6444\u6c0f\u6e29\u5ea6\"); std::io::stdin() .read_line(&mut celsius) .expect(\"\u6570\u636e\u8bfb\u53d6\u5931\u8d25\"); let celsius: f64 = celsius.trim().parse().expect(\"\u6570\u636e\u89e3\u6790\u5931\u8d25\"); result = 9.0 / 5.0 * celsius + 32.0; } else if to_type == 1 { // C = 5 / 9 (F-32) println!(\"\u8bf7\u8f93\u5165\u534e\u6c0f\u6e29\u5ea6\"); std::io::stdin() .read_line(&mut fahrenheit) .expect(\"\u6570\u636e\u8bfb\u53d6\u5931\u8d25\"); let fahrenheit: f64 = fahrenheit.trim().parse().expect(\"\u6570\u636e\u89e3\u6790\u5931\u8d25\"); result = 5.0 / 9.0 * (fahrenheit - 32.0); } else { println!(\"\u8bf7\u9009\u62e9 0 \u6216 1\"); } println!(\"\u7ed3\u679c\u4e3a\uff1a{}\", result); } \u6539\u8fdb\u7248\u672c fn main() { fahrenheit_to_celsius(); } fn fahrenheit_to_celsius() { let mut celsius = String::new(); // \u6444\u6c0f\u5ea6 let mut fahrenheit = String::new(); // \u534e\u6c0f\u5ea6 let mut to_type = String::new(); // \u4e3a 0 \u6444\u6c0f\u5ea6\u8f6c\u534e\u6c0f\u5ea6\uff0c\u4e3a 1 \u534e\u6c0f\u5ea6\u8f6c\u6444\u6c0f\u5ea6 println!(\"\u8bf7\u9009\u62e9\u8f6c\u6362\u7c7b\u578b(\u8f93\u5165 '0' \u4ee3\u8868\u6444\u6c0f\u6e29\u5ea6\u8f6c\u534e\u6c0f\u6e29\u5ea6\uff0c\u8f93\u5165'1' \u4ee3\u8868\u534e\u6c0f\u6e29\u5ea6\u8f6c\u6444\u6c0f\u6e29\u5ea6)\"); // 1. \u8ba9\u7528\u6237\u9009\u62e9\u8f6c\u6362\u7c7b\u578b std::io::stdin() .read_line(&mut to_type) .expect(\"\u8bfb\u53d6\u6570\u636e\u5931\u8d25\"); let to_type = match to_type.trim().parse() { Ok(v) => v, Err(e) => panic!(\"\u6570\u636e\u8f93\u5165\u7c7b\u578b\u9519\u8bef\uff1a{}\", e), }; let result = match to_type { 0 => { println!(\"\u8bf7\u8f93\u5165\u6444\u6c0f\u6e29\u5ea6\"); std::io::stdin() .read_line(&mut celsius) .expect(\"\u6570\u636e\u8bfb\u53d6\u5931\u8d25\"); let celsius: f64 = match celsius.trim().parse() { Ok(v) => v, Err(e) => panic!(\"\u6570\u636e\u8f93\u5165\u7c7b\u578b\u9519\u8bef\uff1a{}\", e), }; Some(9.0 / 5.0 * celsius + 32.0) } 1 => { // C = 5 / 9 (F-32) println!(\"\u8bf7\u8f93\u5165\u534e\u6c0f\u6e29\u5ea6\"); std::io::stdin() .read_line(&mut fahrenheit) .expect(\"\u6570\u636e\u8bfb\u53d6\u5931\u8d25\"); let fahrenheit: f64 = match fahrenheit.trim().parse() { Ok(v) => v, Err(e) => panic!(\"\u6570\u636e\u8f93\u5165\u7c7b\u578b\u9519\u8bef\uff1a{}\", e), }; Some(5.0 / 9.0 * (fahrenheit - 32.0)) } _ => None, }; match result { Some(v) => { println!(\"\u7ed3\u679c\u4e3a\uff1a{}\", v); } None => println!(\"\u9009\u62e9\u9519\u8bef!,\u53ea\u80fd\u8f93\u5165 0 \u6216 1\"), } }","title":"\u6444\u6c0f\u6e29\u5ea6\u8f6c\u534e\u6c0f\u6e29\u5ea6"},{"location":"dependencies/","text":"Rust \u4e2d\u901a\u8fc7\u5728 Cargo.toml \u4e2d\u6dfb\u52a0\u4f9d\u8d56\u6765\u4f7f\u7528\u5404\u79cd\u7684 crate \u4ece crates.io \u5f15\u5165\u4f9d\u8d56\u5305 \u9ed8\u8ba4\u8bbe\u7f6e\u4e0b\uff0cCargo \u5c31\u4ece crates.io \u4e0a\u4e0b\u8f7d\u4f9d\u8d56\u5305\uff0c\u53ea\u9700\u8981\u4e00\u4e2a\u5305\u540d\u548c\u7248\u672c\u53f7\u5373\u53ef\uff1a [dependencies] time = \"0.1.12\" \u5b57\u7b26\u4e32 \"0.1.12\" \u662f\u4e00\u4e2a semver \u683c\u5f0f\u7684\u7248\u672c\u53f7\uff0c\u7b26\u5408 \"x.y.z\" \u7684\u5f62\u5f0f\uff0c\u5176\u4e2d x \u88ab\u79f0\u4e3a\u4e3b\u7248\u672c major , y \u88ab\u79f0\u4e3a\u5c0f\u7248\u672c minor \uff0c\u800c z \u88ab\u79f0\u4e3a\u8865\u4e01 patch \uff0c\u53ef\u4ee5\u770b\u51fa\u4ece\u5de6\u5230\u53f3\uff0c\u7248\u672c\u7684\u5f71\u54cd\u8303\u56f4\u9010\u6b65\u964d\u4f4e\uff0c\u8865\u4e01\u7684\u66f4\u65b0\u662f\u65e0\u5173\u75db\u75d2\u7684\uff0c\u5e76\u4e0d\u4f1a\u9020\u6210 API \u7684\u517c\u5bb9\u6027\u88ab\u7834\u574f\u3002 \"0.1.12\" \u4e2d\u5e76\u6ca1\u6709\u4efb\u4f55\u989d\u5916\u7684\u7b26\u53f7\uff0c\u5728\u7248\u672c\u8bed\u4e49\u4e0a\uff0c\u5b83\u8ddf\u4f7f\u7528\u4e86 ^ \u7684 \"^0.1.12\" \u662f\u76f8\u540c\u7684\uff0c\u90fd\u662f\u6307\u5b9a\u975e\u5e38\u5177\u4f53\u7684\u7248\u672c\u8fdb\u884c\u5f15\u5165\u3002 \u4f46\u662f ^ \u80fd\u505a\u7684\u66f4\u591a\u3002 npm \u4f7f\u7528\u7684\u5c31\u662f semver \u7248\u672c\u53f7\uff0c\u4ece JavaScript \u8fc7\u6765\u7684\u540c\u5b66\u5e94\u8be5\u975e\u5e38\u719f\u6089\u3002 ^ \u6307\u5b9a\u7248\u672c \u4e0e\u4e4b\u524d\u7684 \"0.1.12\" \u4e0d\u540c\uff0c ^ \u53ef\u4ee5\u6307\u5b9a\u4e00\u4e2a\u7248\u672c\u53f7\u8303\u56f4\uff0c \u7136\u540e\u4f1a\u4f7f\u7528\u8be5\u8303\u56f4\u5185\u7684\u6700\u5927\u7248\u672c\u53f7\u6765\u5f15\u7528\u5bf9\u5e94\u7684\u5305 \u3002 \u53ea\u8981\u65b0\u7684\u7248\u672c\u53f7\u6ca1\u6709\u4fee\u6539\u6700\u5de6\u8fb9\u7684\u975e\u96f6\u6570\u5b57\uff0c\u90a3\u8be5\u7248\u672c\u53f7\u5c31\u5728\u5141\u8bb8\u7684\u7248\u672c\u53f7\u8303\u56f4\u4e2d\u3002\u4f8b\u5982 \"^0.1.12\" \u6700\u5de6\u8fb9\u7684\u975e\u96f6\u6570\u5b57\u662f 1 \uff0c\u56e0\u6b64\uff0c\u53ea\u8981\u65b0\u7684\u7248\u672c\u53f7\u662f \"0.1.z\" \u5c31\u53ef\u4ee5\u843d\u5728\u8303\u56f4\u5185\uff0c\u800c 0.2.0 \u663e\u7136\u5c31\u6ca1\u6709\u843d\u5728\u8303\u56f4\u5185\uff0c\u56e0\u6b64\u901a\u8fc7 \"^0.1.12\" \u5f15\u5165\u7684\u4f9d\u8d56\u5305\u662f\u65e0\u6cd5\u88ab\u5347\u7ea7\u5230 0.2.0 \u7248\u672c\u7684\u3002 \u540c\u7406\uff0c\u82e5\u662f \"^1.0\" \uff0c\u5219 1.1 \u5728\u8303\u56f4\u4e2d\uff0c 2.0 \u5219\u4e0d\u5728\u3002 \u5927\u5bb6\u601d\u8003\u4e0b\uff0c \"^0.0.1\" \u4e0e\u54ea\u4e9b\u7248\u672c\u517c\u5bb9\uff1f\u7b54\u6848\u662f\uff1a\u65e0\uff0c\u56e0\u4e3a\u5b83\u6700\u5de6\u8fb9\u7684\u6570\u5b57\u662f 1 \uff0c\u800c\u8be5\u6570\u5b57\u5df2\u7ecf\u9000\u65e0\u53ef\u9000\uff0c\u6211\u4eec\u53c8\u4e0d\u80fd\u4fee\u6539 1 \uff0c\u56e0\u6b64\u6ca1\u6709\u7248\u672c\u843d\u5728\u8303\u56f4\u4e2d\u3002 ^1.2.3 := >=1.2.3, <2.0.0 ^1.2 := >=1.2.0, <2.0.0 ^1 := >=1.0.0, <2.0.0 ^0.2.3 := >=0.2.3, <0.3.0 ^0.2 := >=0.2.0, <0.3.0 ^0.0.3 := >=0.0.3, <0.0.4 ^0.0 := >=0.0.0, <0.1.0 ^0 := >=0.0.0, <1.0.0 \u4ee5\u4e0a\u662f\u66f4\u591a\u7684\u4f8b\u5b50\uff0c \u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u4e2a\u89c4\u5219\u8ddf SemVer \u8fd8\u6709\u6240\u4e0d\u540c \uff0c\u56e0\u4e3a\u5bf9\u4e8e SemVer \u800c\u8a00\uff0c 0.x.y \u7684\u7248\u672c\u662f\u6ca1\u6709\u5176\u5b83\u7248\u672c\u4e0e\u5176\u517c\u5bb9\u7684\uff0c\u800c\u5bf9\u4e8e Rust\uff0c\u53ea\u8981\u7248\u672c\u53f7 0.x.y \u6ee1\u8db3 \uff1a z>=y \u4e14 x>0 \u7684\u6761\u4ef6\uff0c\u90a3\u5b83\u5c31\u80fd\u66f4\u65b0\u5230 0.x.z \u7248\u672c\u3002 ~ \u6307\u5b9a\u7248\u672c ~ \u6307\u5b9a\u4e86\u6700\u5c0f\u5316\u7248\u672c : ~1.2.3 := >=1.2.3, <1.3.0 ~1.2 := >=1.2.0, <1.3.0 ~1 := >=1.0.0, <2.0.0 * \u901a\u914d\u7b26 \u8fd9\u79cd\u65b9\u5f0f\u5141\u8bb8\u5c06 * \u6240\u5728\u7684\u4f4d\u7f6e\u66ff\u6362\u6210\u4efb\u4f55\u6570\u5b57: * := >=0.0.0 1.* := >=1.0.0, <2.0.0 1.2.* := >=1.2.0, <1.3.0 \u4e0d\u8fc7 crates.io \u5e76\u4e0d\u5141\u8bb8\u6211\u4eec\u53ea\u4f7f\u7528\u5b64\u96f6\u96f6\u4e00\u4e2a * \u6765\u6307\u5b9a\u7248\u672c\u53f7 : * \u3002 \u6bd4\u8f83\u7b26 \u53ef\u4ee5\u4f7f\u7528\u6bd4\u8f83\u7b26\u7684\u65b9\u5f0f\u6765\u6307\u5b9a\u4e00\u4e2a\u7248\u672c\u53f7\u8303\u56f4\u6216\u4e00\u4e2a\u7cbe\u786e\u7684\u7248\u672c\u53f7: >= 1.2.0 > 1 < 2 = 1.2.3 \u540c\u65f6\u8fd8\u80fd\u4f7f\u7528\u6bd4\u8f83\u7b26\u8fdb\u884c\u7ec4\u5408\uff0c\u5e76\u901a\u8fc7\u9017\u53f7\u5206\u9694\uff1a >= 1.2, < 1.5 \u9700\u8981\u6ce8\u610f\uff0c\u4ee5\u4e0a\u7684\u7248\u672c\u53f7\u89c4\u5219\u4ec5\u4ec5\u9488\u5bf9 crate.io \u548c\u57fa\u4e8e\u5b83\u642d\u5efa\u7684\u6ce8\u518c\u670d\u52a1(\u4f8b\u5982\u79d1\u5927\u670d\u52a1\u6e90) \uff0c\u5176\u5b83\u6ce8\u518c\u670d\u52a1(\u4f8b\u5982 GitHub )\u6709\u81ea\u5df1\u76f8\u5e94\u7684\u89c4\u5219\u3002 \u4ece\u5176\u5b83\u6ce8\u518c\u670d\u52a1\u5f15\u5165\u4f9d\u8d56\u5305 \u4e3a\u4e86\u4f7f\u7528 crates.io \u4e4b\u5916\u7684\u6ce8\u518c\u670d\u52a1\uff0c\u6211\u4eec\u9700\u8981\u5bf9 $HOME/.cargo/config.toml ($CARGO_HOME \u4e0b) \u6587\u4ef6\u8fdb\u884c\u914d\u7f6e\uff0c\u6dfb\u52a0\u65b0\u7684\u670d\u52a1\u63d0\u4f9b\u5546\uff0c\u6709\u4e24\u79cd\u65b9\u5f0f\u53ef\u4ee5\u5b9e\u73b0\u3002 \u7531\u4e8e\u56fd\u5185\u8bbf\u95ee\u56fd\u5916\u6ce8\u518c\u670d\u52a1\u7684\u4e0d\u7a33\u5b9a\u6027\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 \u79d1\u5927\u7684\u6ce8\u518c\u670d\u52a1 \u6765\u63d0\u5347\u4e0b\u8f7d\u901f\u5ea6\uff0c\u4ee5\u4e0b\u6ce8\u518c\u670d\u52a1\u7684\u94fe\u63a5\u90fd\u662f\u79d1\u5927\u7684 \u9996\u5148\u662f\u5728 crates.io \u4e4b\u5916\u6dfb\u52a0\u65b0\u7684\u6ce8\u518c\u670d\u52a1 \uff0c\u4fee\u6539 .cargo/config.toml \u6dfb\u52a0\u4ee5\u4e0b\u5185\u5bb9\uff1a [registries] ustc = { index = \"https://mirrors.ustc.edu.cn/crates.io-index/\" } \u5bf9\u4e8e\u8fd9\u79cd\u65b9\u5f0f\uff0c\u6211\u4eec\u7684\u9879\u76ee\u7684 Cargo.toml \u4e2d\u7684\u4f9d\u8d56\u5305\u5f15\u5165\u65b9\u5f0f\u4e5f\u6709\u6240\u4e0d\u540c\uff1a [dependencies] time = { registry = \"ustc\" } \u5728\u91cd\u65b0\u914d\u7f6e\u540e\uff0c\u521d\u6b21\u6784\u5efa\u53ef\u80fd\u8981\u8f83\u4e45\u7684\u65f6\u95f4\uff0c\u56e0\u4e3a\u8981\u4e0b\u8f7d\u66f4\u65b0 ustc \u6ce8\u518c\u670d\u52a1\u7684\u7d22\u5f15\u6587\u4ef6\uff0c\u8fd8\u633a\u5927\u7684... \u6ce8\u610f\uff0c\u8fd9\u4e00\u79cd\u4f7f\u7528\u65b9\u5f0f\u6700\u5927\u7684\u7f3a\u70b9\u5c31\u662f\u5728\u5f15\u7528\u4f9d\u8d56\u5305\u65f6\u8981\u6307\u5b9a\u6ce8\u518c\u670d\u52a1: time = { registry = \"ustc\" } \u3002 \u800c\u7b2c\u4e8c\u79cd\u65b9\u5f0f\u5c31\u4e0d\u9700\u8981\uff0c\u56e0\u4e3a\u5b83\u662f\u76f4\u63a5\u4f7f\u7528\u65b0\u6ce8\u518c\u670d\u52a1\u6765\u66ff\u4ee3\u9ed8\u8ba4\u7684 crates.io \u3002 [source.crates-io] replace-with = 'ustc' [source.ustc] registry = \"git://mirrors.ustc.edu.cn/crates.io-index\" \u4e0a\u9762\u914d\u7f6e\u4e2d\u7684\u7b2c\u4e00\u4e2a\u90e8\u5206\uff0c\u9996\u5148\u5c06\u6e90 source.crates-io \u66ff\u6362\u4e3a ustc \uff0c\u7136\u540e\u5728\u7b2c\u4e8c\u90e8\u5206\u6307\u5b9a\u4e86 ustc \u6e90\u7684\u5730\u5740\u3002 \u6ce8\u610f\uff0c\u5982\u679c\u4f60\u8981\u53d1\u5e03\u5305\u5230 crates.io \u4e0a\uff0c\u90a3\u8be5\u5305\u7684\u4f9d\u8d56\u4e5f\u5fc5\u987b\u5728 crates.io \u4e0a \u5f15\u5165 git \u4ed3\u5e93\u4f5c\u4e3a\u4f9d\u8d56\u5305 \u82e5\u8981\u5f15\u5165 git \u4ed3\u5e93\u4e2d\u7684\u5e93\u4f5c\u4e3a\u4f9d\u8d56\u5305\uff0c\u4f60\u81f3\u5c11\u9700\u8981\u63d0\u4f9b\u4e00\u4e2a\u4ed3\u5e93\u7684\u5730\u5740: [dependencies] regex = { git = \"https://github.com/rust-lang/regex\" } \u7531\u4e8e\u6ca1\u6709\u6307\u5b9a\u7248\u672c\uff0cCargo \u4f1a\u5047\u5b9a\u6211\u4eec\u4f7f\u7528 master \u6216 main \u5206\u652f\u7684\u6700\u65b0 commit \u3002\u4f60\u53ef\u4ee5\u4f7f\u7528 rev \u3001 tag \u6216 branch \u6765\u6307\u5b9a\u60f3\u8981\u62c9\u53d6\u7684\u7248\u672c\u3002\u4f8b\u5982\u4e0b\u9762\u4ee3\u7801\u62c9\u53d6\u4e86 next \u5206\u652f\u4e0a\u7684\u6700\u65b0 commit \uff1a [dependencies] regex = { git = \"https://github.com/rust-lang/regex\", branch = \"next\" } \u4efb\u4f55\u975e tag \u548c branch \u7684\u7c7b\u578b\u90fd\u53ef\u4ee5\u901a\u8fc7 rev \u6765\u5f15\u5165\uff0c\u4f8b\u5982\u901a\u8fc7\u6700\u8fd1\u4e00\u6b21 commit \u7684\u54c8\u5e0c\u503c\u5f15\u5165: rev = \"4c59b707\" \uff0c\u518d\u6bd4\u5982\u8fdc\u7a0b\u4ed3\u5e93\u63d0\u4f9b\u7684\u7684\u5177\u540d\u5f15\u7528: rev = \"refs/pull/493/head\" \u3002 \u4e00\u65e6 git \u4f9d\u8d56\u88ab\u62c9\u53d6\u4e0b\u6765\uff0c\u8be5\u7248\u672c\u5c31\u4f1a\u88ab\u8bb0\u5f55\u5230 Cargo.lock \u4e2d\u8fdb\u884c\u9501\u5b9a\u3002\u56e0\u6b64 git \u4ed3\u5e93\u4e2d\u540e\u7eed\u65b0\u7684\u63d0\u4ea4\u4e0d\u518d\u4f1a\u88ab\u81ea\u52a8\u62c9\u53d6\uff0c\u9664\u975e\u4f60\u901a\u8fc7 cargo update \u6765\u5347\u7ea7\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\u9501\u5b9a\u4e00\u65e6\u88ab\u5220\u9664\uff0c\u90a3 Cargo \u4f9d\u7136\u4f1a\u6309\u7167 Cargo.toml \u4e2d\u914d\u7f6e\u7684\u5730\u5740\u548c\u7248\u672c\u53bb\u62c9\u53d6\u65b0\u7684\u7248\u672c\uff0c\u5982\u679c\u4f60\u914d\u7f6e\u7684\u7248\u672c\u4e0d\u6b63\u786e\uff0c\u90a3\u53ef\u80fd\u4f1a\u62c9\u53d6\u4e0b\u6765\u4e00\u4e2a\u4e0d\u517c\u5bb9\u7684\u65b0\u7248\u672c\uff01 \u56e0\u6b64\u4e0d\u8981\u4f9d\u8d56\u9501\u5b9a\u6765\u5b8c\u6210\u7248\u672c\u7684\u63a7\u5236\uff0c\u800c\u5e94\u8be5\u8001\u8001\u5b9e\u5b9e\u7684\u5728 Cargo.toml \u5c0f\u5fc3\u914d\u7f6e\u4f60\u5e0c\u671b\u4f7f\u7528\u7684\u7248\u672c\u3002 \u5982\u679c\u8bbf\u95ee\u7684\u662f\u79c1\u6709\u4ed3\u5e93\uff0c\u4f60\u53ef\u80fd\u9700\u8981\u6388\u6743\u6765\u8bbf\u95ee\u8be5\u4ed3\u5e93\uff0c\u53ef\u4ee5\u67e5\u770b \u8fd9\u91cc \u4e86\u89e3\u6388\u6743\u7684\u65b9\u5f0f\u3002 \u901a\u8fc7\u8def\u5f84\u5f15\u5165\u672c\u5730\u4f9d\u8d56\u5305 Cargo \u652f\u6301\u901a\u8fc7\u8def\u5f84\u7684\u65b9\u5f0f\u6765\u5f15\u5165\u672c\u5730\u7684\u4f9d\u8d56\u5305\uff1a\u4e00\u822c\u6765\u8bf4\uff0c\u672c\u5730\u4f9d\u8d56\u5305\u90fd\u662f\u540c\u4e00\u4e2a\u9879\u76ee\u5185\u7684\u5185\u90e8\u5305\uff0c\u4f8b\u5982\u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a hello_world \u9879\u76ee( package )\uff0c\u73b0\u5728\u5728\u5176\u6839\u76ee\u5f55\u4e0b\u65b0\u5efa\u4e00\u4e2a\u5305: # \u5728 hello_world/ \u76ee\u5f55\u4e0b $ cargo new hello_utils \u65b0\u5efa\u7684 hello_utils \u6587\u4ef6\u5939\u8ddf src \u3001 Cargo.toml \u540c\u7ea7\uff0c\u73b0\u5728\u4fee\u6539 Cargo.toml \u8ba9 hello_world \u9879\u76ee\u5f15\u5165\u65b0\u5efa\u7684\u5305: [dependencies] hello_utils = { path = \"hello_utils\" } # \u4ee5\u4e0b\u8def\u5f84\u4e5f\u53ef\u4ee5 # hello_utils = { path = \"./hello_utils\" } # hello_utils = { path = \"../hello_world/hello_utils\" } \u4f46\u662f\uff0c\u6b64\u65f6\u7684 hello_world \u662f\u65e0\u6cd5\u53d1\u5e03\u5230 crates.io \u4e0a\u7684\u3002\u60f3\u8981\u53d1\u5e03\uff0c\u9700\u8981\u5148\u5c06 hello_utils \u5148\u53d1\u5e03\u5230 crates.io \u4e0a\uff0c\u7136\u540e\u518d\u901a\u8fc7 crates.io \u7684\u65b9\u5f0f\u6765\u5f15\u5165: [dependencies] hello_utils = { path = \"hello_utils\", version = \"0.1.0\" } \u6ce8\u610f\uff01\u4f7f\u7528 path \u6307\u5b9a\u4f9d\u8d56\u7684 package \u5c06\u65e0\u6cd5\u53d1\u5e03\u5230 crates.io \uff0c\u9664\u975e path \u5b58\u5728\u4e8e [dev-dependencies] \u4e2d\u3002\u5f53\u7136\uff0c\u4f60\u8fd8\u53ef\u4ee5\u4f7f\u7528\u591a\u79cd\u5f15\u7528\u6df7\u5408\u7684\u65b9\u5f0f\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u4e0b\u9762\u5c06\u8fdb\u884c\u4ecb\u7ecd \u591a\u5f15\u7528\u65b9\u5f0f\u6df7\u5408 \u5b9e\u9645\u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5\u540c\u65f6\u4f7f\u7528\u591a\u79cd\u65b9\u5f0f\u6765\u5f15\u5165\u540c\u4e00\u4e2a\u5305\uff0c\u4f8b\u5982\u672c\u5730\u5f15\u5165\u548c crates.io : [dependencies] # \u672c\u5730\u4f7f\u7528\u65f6\uff0c\u901a\u8fc7 path \u5f15\u5165, # \u53d1\u5e03\u5230 `crates.io` \u65f6\uff0c\u901a\u8fc7 `crates.io` \u7684\u65b9\u5f0f\u5f15\u5165\uff1a version = \"1.0\" bitflags = { path = \"my-bitflags\", version = \"1.0\" } # \u672c\u5730\u4f7f\u7528\u65f6\uff0c\u901a\u8fc7 git \u4ed3\u5e93\u5f15\u5165 # \u5f53\u53d1\u5e03\u65f6\uff0c\u901a\u8fc7 `crates.io` \u5f15\u5165\uff1a version = \"1.0\" smallvec = { git = \"https://github.com/servo/rust-smallvec\", version = \"1.0\" } # N.B. \u82e5 version \u65e0\u6cd5\u5339\u914d\uff0cCargo \u5c06\u65e0\u6cd5\u7f16\u8bd1 \u8fd9\u79cd\u65b9\u5f0f\u8ddf\u4e0b\u7ae0\u8282\u5c06\u8981\u8bb2\u8ff0\u7684\u4f9d\u8d56\u8986\u76d6\u7c7b\u4f3c\uff0c\u4f46\u662f\u524d\u8005\u53ea\u4f1a\u5e94\u7528\u5230\u5f53\u524d\u58f0\u660e\u7684\u4f9d\u8d56\u5305\u4e0a\u3002 \u6839\u636e\u5e73\u53f0\u5f15\u5165\u4f9d\u8d56 \u6211\u4eec\u8fd8\u53ef\u4ee5\u6839\u636e\u7279\u5b9a\u7684\u5e73\u53f0\u6765\u5f15\u5165\u4f9d\u8d56: [target.'cfg(windows)'.dependencies] winhttp = \"0.4.0\" [target.'cfg(unix)'.dependencies] openssl = \"1.0.1\" [target.'cfg(target_arch = \"x86\")'.dependencies] native = { path = \"native/i686\" } [target.'cfg(target_arch = \"x86_64\")'.dependencies] native = { path = \"native/x86_64\" } \u6b64\u5904\u7684\u8bed\u6cd5\u8ddf Rust \u7684 #[cfg] \u8bed\u6cd5\u975e\u5e38\u76f8\u50cf\uff0c\u56e0\u6b64\u6211\u4eec\u8fd8\u80fd\u4f7f\u7528\u903b\u8f91\u64cd\u4f5c\u7b26\u8fdb\u884c\u63a7\u5236: [target.'cfg(not(unix))'.dependencies] openssl = \"1.0.1\" \u8fd9\u91cc\u7684\u610f\u601d\u662f\uff0c\u5f53\u4e0d\u662f unix \u64cd\u4f5c\u7cfb\u7edf\u65f6\uff0c\u624d\u5bf9 openssl \u8fdb\u884c\u5f15\u5165\u3002 \u5982\u679c\u4f60\u60f3\u8981\u77e5\u9053 cfg \u80fd\u591f\u4f5c\u7528\u7684\u76ee\u6807\uff0c\u53ef\u4ee5\u5728\u7ec8\u7aef\u4e2d\u8fd0\u884c rustc --print=cfg \u8fdb\u884c\u67e5\u8be2\u3002\u5f53\u7136\uff0c\u4f60\u53ef\u4ee5\u6307\u5b9a\u5e73\u53f0\u67e5\u8be2: rustc --print=cfg --target=x86_64-pc-windows-msvc \uff0c\u8be5\u547d\u4ee4\u5c06\u5bf9 64bit \u7684 Windows \u8fdb\u884c\u67e5\u8be2\u3002 \u806a\u660e\u7684\u540c\u5b66\u5df2\u7ecf\u53d1\u73b0\uff0c\u8fd9\u975e\u5e38\u7c7b\u4f3c\u4e8e\u6761\u4ef6\u4f9d\u8d56\u5f15\u5165\uff0c\u90a3\u6211\u4eec\u662f\u4e0d\u662f\u53ef\u4ee5\u6839\u636e\u81ea\u5b9a\u4e49\u7684\u6761\u4ef6\u6765\u51b3\u5b9a\u662f\u5426\u5f15\u5165\u67d0\u4e2a\u4f9d\u8d56\u5462\uff1f\u5177\u4f53\u7b54\u6848\u53c2\u89c1\u540e\u7eed\u7684 feature \u7ae0\u8282\u3002\u8fd9\u91cc\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b: [dependencies] foo = { version = \"1.0\", optional = true } bar = { version = \"1.0\", optional = true } [features] fancy-feature = [\"foo\", \"bar\"] \u4f46\u662f\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u4f60\u5982\u679c\u5984\u56fe\u901a\u8fc7 cfg(feature) \u3001 cfg(debug_assertions) , cfg(test) \u548c cfg(proc_macro) \u7684\u65b9\u5f0f\u6765\u6761\u4ef6\u5f15\u5165\u4f9d\u8d56\uff0c\u90a3\u662f\u4e0d\u53ef\u884c\u7684\u3002 Cargo \u8fd8\u5141\u8bb8\u901a\u8fc7\u4e0b\u9762\u7684\u65b9\u5f0f\u6765\u5f15\u5165\u5e73\u53f0\u7279\u5b9a\u7684\u4f9d\u8d56: [target.x86_64-pc-windows-gnu.dependencies] winhttp = \"0.4.0\" [target.i686-unknown-linux-gnu.dependencies] openssl = \"1.0.1\" \u81ea\u5b9a\u4e49 target \u5f15\u5165 \u5982\u679c\u4f60\u5728\u4f7f\u7528\u81ea\u5b9a\u4e49\u7684 target \uff1a\u4f8b\u5982 --target bar.json \uff0c\u90a3\u4e48\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u65b9\u5f0f\u6765\u5f15\u5165\u4f9d\u8d56: [target.bar.dependencies] winhttp = \"0.4.0\" [target.my-special-i686-platform.dependencies] openssl = \"1.0.1\" native = { path = \"native/i686\" } \u9700\u8981\u6ce8\u610f\uff0c\u8fd9\u79cd\u4f7f\u7528\u65b9\u5f0f\u5728 stable \u7248\u672c\u7684 Rust \u4e2d\u65e0\u6cd5\u88ab\u4f7f\u7528\uff0c\u5efa\u8bae\u5927\u5bb6\u5982\u679c\u6ca1\u6709\u7279\u522b\u7684\u9700\u6c42\uff0c\u8fd8\u662f\u4f7f\u7528\u4e4b\u524d\u63d0\u5230\u7684 feature \u65b9\u5f0f [dev-dependencies] \u4f60\u8fd8\u53ef\u4ee5\u4e3a\u9879\u76ee\u6dfb\u52a0\u53ea\u5728\u6d4b\u8bd5\u65f6\u9700\u8981\u7684\u4f9d\u8d56\u5e93\uff0c\u7c7b\u4f3c\u4e8e package.json ( Nodejs )\u6587\u4ef6\u4e2d\u7684 devDependencies \uff0c\u53ef\u4ee5\u5728 Cargo.toml \u4e2d\u6dfb\u52a0 [dev-dependencies] \u6765\u5b9e\u73b0: [dev-dependencies] tempdir = \"0.3\" \u8fd9\u91cc\u7684\u4f9d\u8d56\u53ea\u4f1a\u5728\u8fd0\u884c\u6d4b\u8bd5\u3001\u793a\u4f8b\u548c benchmark \u65f6\u624d\u4f1a\u88ab\u5f15\u5165\u3002\u5e76\u4e14\uff0c\u5047\u8bbe A \u5305\u5f15\u7528\u4e86 B \uff0c\u800c B \u901a\u8fc7 [dev-dependencies] \u7684\u65b9\u5f0f\u5f15\u7528\u4e86 C \u5305\uff0c \u90a3 A \u662f\u4e0d\u4f1a\u5f15\u7528 C \u5305\u7684\u3002 \u5f53\u7136\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u6307\u5b9a\u5e73\u53f0\u7279\u5b9a\u7684\u6d4b\u8bd5\u4f9d\u8d56\u5305: [target.'cfg(unix)'.dev-dependencies] mio = \"0.0.1\" \u6ce8\u610f\uff0c\u5f53\u53d1\u5e03\u5305\u5230 crates.io \u65f6\uff0c [dev-dependencies] \u4e2d\u7684\u4f9d\u8d56\u53ea\u6709\u6307\u5b9a\u4e86 version \u7684\u624d\u4f1a\u88ab\u5305\u542b\u5728\u53d1\u5e03\u5305\u4e2d\u3002\u51b5\u4e14\uff0c\u518d\u52a0\u4e0a\u6d4b\u8bd5\u7a33\u5b9a\u6027\u7684\u8003\u8651\uff0c\u6211\u4eec\u5efa\u8bae\u4e3a [dev-dependencies] \u4e2d\u7684\u5305\u6307\u5b9a\u76f8\u5e94\u7684\u7248\u672c\u53f7 [build-dependencies] \u6211\u4eec\u8fd8\u53ef\u4ee5\u6307\u5b9a\u67d0\u4e9b\u4f9d\u8d56\u4ec5\u7528\u4e8e\u6784\u5efa\u811a\u672c: [build-dependencies] cc = \"1.0.3\" \u5f53\u7136\uff0c\u5e73\u53f0\u7279\u5b9a\u7684\u4f9d\u7136\u53ef\u4ee5\u4f7f\u7528\uff1a [target.'cfg(unix)'.build-dependencies] cc = \"1.0.3\" \u6709\u4e00\u70b9\u9700\u8981\u6ce8\u610f\uff1a\u6784\u5efa\u811a\u672c( <span> </span>build.rs )\u548c\u9879\u76ee\u7684\u6b63\u5e38\u4ee3\u7801\u662f\u5f7c\u6b64\u72ec\u7acb\uff0c\u56e0\u6b64\u5b83\u4eec\u7684\u4f9d\u8d56\u4e0d\u80fd\u4e92\u901a\uff1a \u6784\u5efa\u811a\u672c\u65e0\u6cd5\u4f7f\u7528 [dependencies] \u6216 [dev-dependencies] \u4e2d\u7684\u4f9d\u8d56\uff0c\u800c [build-dependencies] \u4e2d\u7684\u4f9d\u8d56\u4e5f\u65e0\u6cd5\u88ab\u6784\u5efa\u811a\u672c\u4e4b\u5916\u7684\u4ee3\u7801\u6240\u4f7f\u7528\u3002 \u9009\u62e9 features \u5982\u679c\u4f60\u4f9d\u8d56\u7684\u5305\u63d0\u4f9b\u4e86\u6761\u4ef6\u6027\u7684 features \uff0c\u4f60\u53ef\u4ee5\u6307\u5b9a\u4f7f\u7528\u54ea\u4e00\u4e2a: [dependencies.awesome] version = \"1.3.5\" default-features = false # \u4e0d\u8981\u5305\u542b\u9ed8\u8ba4\u7684 features\uff0c\u800c\u662f\u901a\u8fc7\u4e0b\u9762\u7684\u65b9\u5f0f\u6765\u6307\u5b9a features = [\"secure-password\", \"civet\"] \u66f4\u591a\u7684\u4fe1\u606f\u53c2\u89c1 Features \u7ae0\u8282 \u5728 Cargo.toml \u4e2d\u91cd\u547d\u540d\u4f9d\u8d56 \u5982\u679c\u4f60\u60f3\u8981\u5b9e\u73b0\u4ee5\u4e0b\u76ee\u6807\uff1a \u907f\u514d\u5728 Rust \u4ee3\u7801\u4e2d\u4f7f\u7528 use foo as bar \u4f9d\u8d56\u67d0\u4e2a\u5305\u7684\u591a\u4e2a\u7248\u672c \u4f9d\u8d56\u6765\u81ea\u4e8e\u4e0d\u540c\u6ce8\u518c\u670d\u52a1\u7684\u540c\u540d\u5305 \u90a3\u53ef\u4ee5\u4f7f\u7528 Cargo \u63d0\u4f9b\u7684 package key : [package] name = \"mypackage\" version = \"0.0.1\" [dependencies] foo = \"0.1\" bar = { git = \"https://github.com/example/project\", package = \"foo\" } baz = { version = \"0.1\", registry = \"custom\", package = \"foo\" } \u6b64\u65f6\uff0c\u4f60\u7684\u4ee3\u7801\u4e2d\u53ef\u4ee5\u4f7f\u7528\u4e09\u4e2a\u5305\uff1a extern crate foo; // \u6765\u81ea crates.io extern crate bar; // \u6765\u81ea git repository extern crate baz; // \u6765\u81ea registry `custom` \u6709\u8da3\u7684\u662f\uff0c\u7531\u4e8e\u8fd9\u4e09\u4e2a package \u7684\u540d\u79f0\u90fd\u662f foo (\u5728\u5404\u81ea\u7684 Cargo.toml \u4e2d\u5b9a\u4e49)\uff0c\u56e0\u6b64\u6211\u4eec\u663e\u5f0f\u7684\u901a\u8fc7 package = \"foo\" \u7684\u65b9\u5f0f\u544a\u8bc9 Cargo\uff1a\u6211\u4eec\u9700\u8981\u7684\u5c31\u662f\u8fd9\u4e2a foo package \uff0c\u867d\u7136\u5b83\u88ab\u91cd\u547d\u540d\u4e3a bar \u6216 baz \u3002 \u6709\u4e00\u70b9\u9700\u8981\u6ce8\u610f\uff0c\u5f53\u4f7f\u7528\u53ef\u9009\u4f9d\u8d56\u65f6\uff0c\u5982\u679c\u4f60\u5c06 foo \u5305\u91cd\u547d\u540d\u4e3a bar \u5305\uff0c\u90a3\u5f15\u7528\u524d\u8005\u7684 feature \u65f6\u7684\u8def\u5f84\u540d\u4e5f\u8981\u505a\u76f8\u5e94\u7684\u4fee\u6539: [dependencies] bar = { version = \"0.1\", package = 'foo', optional = true } [features] log-debug = ['bar/log-debug'] # \u82e5\u4f7f\u7528 'foo/log-debug' \u4f1a\u5bfc\u81f4\u62a5\u9519 \u53c2\u8003\uff1a \u6307\u5b9a\u4f9d\u8d56\u9879 - Rust\u8bed\u8a00\u5723\u7ecf(Rust Course)","title":"\u4f9d\u8d56"},{"location":"dependencies/#rust-cargotoml-crate","text":"","title":"Rust \u4e2d\u901a\u8fc7\u5728 Cargo.toml \u4e2d\u6dfb\u52a0\u4f9d\u8d56\u6765\u4f7f\u7528\u5404\u79cd\u7684 crate"},{"location":"dependencies/#cratesio","text":"\u9ed8\u8ba4\u8bbe\u7f6e\u4e0b\uff0cCargo \u5c31\u4ece crates.io \u4e0a\u4e0b\u8f7d\u4f9d\u8d56\u5305\uff0c\u53ea\u9700\u8981\u4e00\u4e2a\u5305\u540d\u548c\u7248\u672c\u53f7\u5373\u53ef\uff1a [dependencies] time = \"0.1.12\" \u5b57\u7b26\u4e32 \"0.1.12\" \u662f\u4e00\u4e2a semver \u683c\u5f0f\u7684\u7248\u672c\u53f7\uff0c\u7b26\u5408 \"x.y.z\" \u7684\u5f62\u5f0f\uff0c\u5176\u4e2d x \u88ab\u79f0\u4e3a\u4e3b\u7248\u672c major , y \u88ab\u79f0\u4e3a\u5c0f\u7248\u672c minor \uff0c\u800c z \u88ab\u79f0\u4e3a\u8865\u4e01 patch \uff0c\u53ef\u4ee5\u770b\u51fa\u4ece\u5de6\u5230\u53f3\uff0c\u7248\u672c\u7684\u5f71\u54cd\u8303\u56f4\u9010\u6b65\u964d\u4f4e\uff0c\u8865\u4e01\u7684\u66f4\u65b0\u662f\u65e0\u5173\u75db\u75d2\u7684\uff0c\u5e76\u4e0d\u4f1a\u9020\u6210 API \u7684\u517c\u5bb9\u6027\u88ab\u7834\u574f\u3002 \"0.1.12\" \u4e2d\u5e76\u6ca1\u6709\u4efb\u4f55\u989d\u5916\u7684\u7b26\u53f7\uff0c\u5728\u7248\u672c\u8bed\u4e49\u4e0a\uff0c\u5b83\u8ddf\u4f7f\u7528\u4e86 ^ \u7684 \"^0.1.12\" \u662f\u76f8\u540c\u7684\uff0c\u90fd\u662f\u6307\u5b9a\u975e\u5e38\u5177\u4f53\u7684\u7248\u672c\u8fdb\u884c\u5f15\u5165\u3002 \u4f46\u662f ^ \u80fd\u505a\u7684\u66f4\u591a\u3002 npm \u4f7f\u7528\u7684\u5c31\u662f semver \u7248\u672c\u53f7\uff0c\u4ece JavaScript \u8fc7\u6765\u7684\u540c\u5b66\u5e94\u8be5\u975e\u5e38\u719f\u6089\u3002","title":"\u4ece crates.io \u5f15\u5165\u4f9d\u8d56\u5305"},{"location":"dependencies/#_1","text":"\u4e0e\u4e4b\u524d\u7684 \"0.1.12\" \u4e0d\u540c\uff0c ^ \u53ef\u4ee5\u6307\u5b9a\u4e00\u4e2a\u7248\u672c\u53f7\u8303\u56f4\uff0c \u7136\u540e\u4f1a\u4f7f\u7528\u8be5\u8303\u56f4\u5185\u7684\u6700\u5927\u7248\u672c\u53f7\u6765\u5f15\u7528\u5bf9\u5e94\u7684\u5305 \u3002 \u53ea\u8981\u65b0\u7684\u7248\u672c\u53f7\u6ca1\u6709\u4fee\u6539\u6700\u5de6\u8fb9\u7684\u975e\u96f6\u6570\u5b57\uff0c\u90a3\u8be5\u7248\u672c\u53f7\u5c31\u5728\u5141\u8bb8\u7684\u7248\u672c\u53f7\u8303\u56f4\u4e2d\u3002\u4f8b\u5982 \"^0.1.12\" \u6700\u5de6\u8fb9\u7684\u975e\u96f6\u6570\u5b57\u662f 1 \uff0c\u56e0\u6b64\uff0c\u53ea\u8981\u65b0\u7684\u7248\u672c\u53f7\u662f \"0.1.z\" \u5c31\u53ef\u4ee5\u843d\u5728\u8303\u56f4\u5185\uff0c\u800c 0.2.0 \u663e\u7136\u5c31\u6ca1\u6709\u843d\u5728\u8303\u56f4\u5185\uff0c\u56e0\u6b64\u901a\u8fc7 \"^0.1.12\" \u5f15\u5165\u7684\u4f9d\u8d56\u5305\u662f\u65e0\u6cd5\u88ab\u5347\u7ea7\u5230 0.2.0 \u7248\u672c\u7684\u3002 \u540c\u7406\uff0c\u82e5\u662f \"^1.0\" \uff0c\u5219 1.1 \u5728\u8303\u56f4\u4e2d\uff0c 2.0 \u5219\u4e0d\u5728\u3002 \u5927\u5bb6\u601d\u8003\u4e0b\uff0c \"^0.0.1\" \u4e0e\u54ea\u4e9b\u7248\u672c\u517c\u5bb9\uff1f\u7b54\u6848\u662f\uff1a\u65e0\uff0c\u56e0\u4e3a\u5b83\u6700\u5de6\u8fb9\u7684\u6570\u5b57\u662f 1 \uff0c\u800c\u8be5\u6570\u5b57\u5df2\u7ecf\u9000\u65e0\u53ef\u9000\uff0c\u6211\u4eec\u53c8\u4e0d\u80fd\u4fee\u6539 1 \uff0c\u56e0\u6b64\u6ca1\u6709\u7248\u672c\u843d\u5728\u8303\u56f4\u4e2d\u3002 ^1.2.3 := >=1.2.3, <2.0.0 ^1.2 := >=1.2.0, <2.0.0 ^1 := >=1.0.0, <2.0.0 ^0.2.3 := >=0.2.3, <0.3.0 ^0.2 := >=0.2.0, <0.3.0 ^0.0.3 := >=0.0.3, <0.0.4 ^0.0 := >=0.0.0, <0.1.0 ^0 := >=0.0.0, <1.0.0 \u4ee5\u4e0a\u662f\u66f4\u591a\u7684\u4f8b\u5b50\uff0c \u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u4e2a\u89c4\u5219\u8ddf SemVer \u8fd8\u6709\u6240\u4e0d\u540c \uff0c\u56e0\u4e3a\u5bf9\u4e8e SemVer \u800c\u8a00\uff0c 0.x.y \u7684\u7248\u672c\u662f\u6ca1\u6709\u5176\u5b83\u7248\u672c\u4e0e\u5176\u517c\u5bb9\u7684\uff0c\u800c\u5bf9\u4e8e Rust\uff0c\u53ea\u8981\u7248\u672c\u53f7 0.x.y \u6ee1\u8db3 \uff1a z>=y \u4e14 x>0 \u7684\u6761\u4ef6\uff0c\u90a3\u5b83\u5c31\u80fd\u66f4\u65b0\u5230 0.x.z \u7248\u672c\u3002","title":"^ \u6307\u5b9a\u7248\u672c"},{"location":"dependencies/#_2","text":"~ \u6307\u5b9a\u4e86\u6700\u5c0f\u5316\u7248\u672c : ~1.2.3 := >=1.2.3, <1.3.0 ~1.2 := >=1.2.0, <1.3.0 ~1 := >=1.0.0, <2.0.0","title":"~ \u6307\u5b9a\u7248\u672c"},{"location":"dependencies/#_3","text":"\u8fd9\u79cd\u65b9\u5f0f\u5141\u8bb8\u5c06 * \u6240\u5728\u7684\u4f4d\u7f6e\u66ff\u6362\u6210\u4efb\u4f55\u6570\u5b57: * := >=0.0.0 1.* := >=1.0.0, <2.0.0 1.2.* := >=1.2.0, <1.3.0 \u4e0d\u8fc7 crates.io \u5e76\u4e0d\u5141\u8bb8\u6211\u4eec\u53ea\u4f7f\u7528\u5b64\u96f6\u96f6\u4e00\u4e2a * \u6765\u6307\u5b9a\u7248\u672c\u53f7 : * \u3002","title":"* \u901a\u914d\u7b26"},{"location":"dependencies/#_4","text":"\u53ef\u4ee5\u4f7f\u7528\u6bd4\u8f83\u7b26\u7684\u65b9\u5f0f\u6765\u6307\u5b9a\u4e00\u4e2a\u7248\u672c\u53f7\u8303\u56f4\u6216\u4e00\u4e2a\u7cbe\u786e\u7684\u7248\u672c\u53f7: >= 1.2.0 > 1 < 2 = 1.2.3 \u540c\u65f6\u8fd8\u80fd\u4f7f\u7528\u6bd4\u8f83\u7b26\u8fdb\u884c\u7ec4\u5408\uff0c\u5e76\u901a\u8fc7\u9017\u53f7\u5206\u9694\uff1a >= 1.2, < 1.5 \u9700\u8981\u6ce8\u610f\uff0c\u4ee5\u4e0a\u7684\u7248\u672c\u53f7\u89c4\u5219\u4ec5\u4ec5\u9488\u5bf9 crate.io \u548c\u57fa\u4e8e\u5b83\u642d\u5efa\u7684\u6ce8\u518c\u670d\u52a1(\u4f8b\u5982\u79d1\u5927\u670d\u52a1\u6e90) \uff0c\u5176\u5b83\u6ce8\u518c\u670d\u52a1(\u4f8b\u5982 GitHub )\u6709\u81ea\u5df1\u76f8\u5e94\u7684\u89c4\u5219\u3002","title":"\u6bd4\u8f83\u7b26"},{"location":"dependencies/#_5","text":"\u4e3a\u4e86\u4f7f\u7528 crates.io \u4e4b\u5916\u7684\u6ce8\u518c\u670d\u52a1\uff0c\u6211\u4eec\u9700\u8981\u5bf9 $HOME/.cargo/config.toml ($CARGO_HOME \u4e0b) \u6587\u4ef6\u8fdb\u884c\u914d\u7f6e\uff0c\u6dfb\u52a0\u65b0\u7684\u670d\u52a1\u63d0\u4f9b\u5546\uff0c\u6709\u4e24\u79cd\u65b9\u5f0f\u53ef\u4ee5\u5b9e\u73b0\u3002 \u7531\u4e8e\u56fd\u5185\u8bbf\u95ee\u56fd\u5916\u6ce8\u518c\u670d\u52a1\u7684\u4e0d\u7a33\u5b9a\u6027\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 \u79d1\u5927\u7684\u6ce8\u518c\u670d\u52a1 \u6765\u63d0\u5347\u4e0b\u8f7d\u901f\u5ea6\uff0c\u4ee5\u4e0b\u6ce8\u518c\u670d\u52a1\u7684\u94fe\u63a5\u90fd\u662f\u79d1\u5927\u7684 \u9996\u5148\u662f\u5728 crates.io \u4e4b\u5916\u6dfb\u52a0\u65b0\u7684\u6ce8\u518c\u670d\u52a1 \uff0c\u4fee\u6539 .cargo/config.toml \u6dfb\u52a0\u4ee5\u4e0b\u5185\u5bb9\uff1a [registries] ustc = { index = \"https://mirrors.ustc.edu.cn/crates.io-index/\" } \u5bf9\u4e8e\u8fd9\u79cd\u65b9\u5f0f\uff0c\u6211\u4eec\u7684\u9879\u76ee\u7684 Cargo.toml \u4e2d\u7684\u4f9d\u8d56\u5305\u5f15\u5165\u65b9\u5f0f\u4e5f\u6709\u6240\u4e0d\u540c\uff1a [dependencies] time = { registry = \"ustc\" } \u5728\u91cd\u65b0\u914d\u7f6e\u540e\uff0c\u521d\u6b21\u6784\u5efa\u53ef\u80fd\u8981\u8f83\u4e45\u7684\u65f6\u95f4\uff0c\u56e0\u4e3a\u8981\u4e0b\u8f7d\u66f4\u65b0 ustc \u6ce8\u518c\u670d\u52a1\u7684\u7d22\u5f15\u6587\u4ef6\uff0c\u8fd8\u633a\u5927\u7684... \u6ce8\u610f\uff0c\u8fd9\u4e00\u79cd\u4f7f\u7528\u65b9\u5f0f\u6700\u5927\u7684\u7f3a\u70b9\u5c31\u662f\u5728\u5f15\u7528\u4f9d\u8d56\u5305\u65f6\u8981\u6307\u5b9a\u6ce8\u518c\u670d\u52a1: time = { registry = \"ustc\" } \u3002 \u800c\u7b2c\u4e8c\u79cd\u65b9\u5f0f\u5c31\u4e0d\u9700\u8981\uff0c\u56e0\u4e3a\u5b83\u662f\u76f4\u63a5\u4f7f\u7528\u65b0\u6ce8\u518c\u670d\u52a1\u6765\u66ff\u4ee3\u9ed8\u8ba4\u7684 crates.io \u3002 [source.crates-io] replace-with = 'ustc' [source.ustc] registry = \"git://mirrors.ustc.edu.cn/crates.io-index\" \u4e0a\u9762\u914d\u7f6e\u4e2d\u7684\u7b2c\u4e00\u4e2a\u90e8\u5206\uff0c\u9996\u5148\u5c06\u6e90 source.crates-io \u66ff\u6362\u4e3a ustc \uff0c\u7136\u540e\u5728\u7b2c\u4e8c\u90e8\u5206\u6307\u5b9a\u4e86 ustc \u6e90\u7684\u5730\u5740\u3002 \u6ce8\u610f\uff0c\u5982\u679c\u4f60\u8981\u53d1\u5e03\u5305\u5230 crates.io \u4e0a\uff0c\u90a3\u8be5\u5305\u7684\u4f9d\u8d56\u4e5f\u5fc5\u987b\u5728 crates.io \u4e0a","title":"\u4ece\u5176\u5b83\u6ce8\u518c\u670d\u52a1\u5f15\u5165\u4f9d\u8d56\u5305"},{"location":"dependencies/#git","text":"\u82e5\u8981\u5f15\u5165 git \u4ed3\u5e93\u4e2d\u7684\u5e93\u4f5c\u4e3a\u4f9d\u8d56\u5305\uff0c\u4f60\u81f3\u5c11\u9700\u8981\u63d0\u4f9b\u4e00\u4e2a\u4ed3\u5e93\u7684\u5730\u5740: [dependencies] regex = { git = \"https://github.com/rust-lang/regex\" } \u7531\u4e8e\u6ca1\u6709\u6307\u5b9a\u7248\u672c\uff0cCargo \u4f1a\u5047\u5b9a\u6211\u4eec\u4f7f\u7528 master \u6216 main \u5206\u652f\u7684\u6700\u65b0 commit \u3002\u4f60\u53ef\u4ee5\u4f7f\u7528 rev \u3001 tag \u6216 branch \u6765\u6307\u5b9a\u60f3\u8981\u62c9\u53d6\u7684\u7248\u672c\u3002\u4f8b\u5982\u4e0b\u9762\u4ee3\u7801\u62c9\u53d6\u4e86 next \u5206\u652f\u4e0a\u7684\u6700\u65b0 commit \uff1a [dependencies] regex = { git = \"https://github.com/rust-lang/regex\", branch = \"next\" } \u4efb\u4f55\u975e tag \u548c branch \u7684\u7c7b\u578b\u90fd\u53ef\u4ee5\u901a\u8fc7 rev \u6765\u5f15\u5165\uff0c\u4f8b\u5982\u901a\u8fc7\u6700\u8fd1\u4e00\u6b21 commit \u7684\u54c8\u5e0c\u503c\u5f15\u5165: rev = \"4c59b707\" \uff0c\u518d\u6bd4\u5982\u8fdc\u7a0b\u4ed3\u5e93\u63d0\u4f9b\u7684\u7684\u5177\u540d\u5f15\u7528: rev = \"refs/pull/493/head\" \u3002 \u4e00\u65e6 git \u4f9d\u8d56\u88ab\u62c9\u53d6\u4e0b\u6765\uff0c\u8be5\u7248\u672c\u5c31\u4f1a\u88ab\u8bb0\u5f55\u5230 Cargo.lock \u4e2d\u8fdb\u884c\u9501\u5b9a\u3002\u56e0\u6b64 git \u4ed3\u5e93\u4e2d\u540e\u7eed\u65b0\u7684\u63d0\u4ea4\u4e0d\u518d\u4f1a\u88ab\u81ea\u52a8\u62c9\u53d6\uff0c\u9664\u975e\u4f60\u901a\u8fc7 cargo update \u6765\u5347\u7ea7\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\u9501\u5b9a\u4e00\u65e6\u88ab\u5220\u9664\uff0c\u90a3 Cargo \u4f9d\u7136\u4f1a\u6309\u7167 Cargo.toml \u4e2d\u914d\u7f6e\u7684\u5730\u5740\u548c\u7248\u672c\u53bb\u62c9\u53d6\u65b0\u7684\u7248\u672c\uff0c\u5982\u679c\u4f60\u914d\u7f6e\u7684\u7248\u672c\u4e0d\u6b63\u786e\uff0c\u90a3\u53ef\u80fd\u4f1a\u62c9\u53d6\u4e0b\u6765\u4e00\u4e2a\u4e0d\u517c\u5bb9\u7684\u65b0\u7248\u672c\uff01 \u56e0\u6b64\u4e0d\u8981\u4f9d\u8d56\u9501\u5b9a\u6765\u5b8c\u6210\u7248\u672c\u7684\u63a7\u5236\uff0c\u800c\u5e94\u8be5\u8001\u8001\u5b9e\u5b9e\u7684\u5728 Cargo.toml \u5c0f\u5fc3\u914d\u7f6e\u4f60\u5e0c\u671b\u4f7f\u7528\u7684\u7248\u672c\u3002 \u5982\u679c\u8bbf\u95ee\u7684\u662f\u79c1\u6709\u4ed3\u5e93\uff0c\u4f60\u53ef\u80fd\u9700\u8981\u6388\u6743\u6765\u8bbf\u95ee\u8be5\u4ed3\u5e93\uff0c\u53ef\u4ee5\u67e5\u770b \u8fd9\u91cc \u4e86\u89e3\u6388\u6743\u7684\u65b9\u5f0f\u3002","title":"\u5f15\u5165 git \u4ed3\u5e93\u4f5c\u4e3a\u4f9d\u8d56\u5305"},{"location":"dependencies/#_6","text":"Cargo \u652f\u6301\u901a\u8fc7\u8def\u5f84\u7684\u65b9\u5f0f\u6765\u5f15\u5165\u672c\u5730\u7684\u4f9d\u8d56\u5305\uff1a\u4e00\u822c\u6765\u8bf4\uff0c\u672c\u5730\u4f9d\u8d56\u5305\u90fd\u662f\u540c\u4e00\u4e2a\u9879\u76ee\u5185\u7684\u5185\u90e8\u5305\uff0c\u4f8b\u5982\u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a hello_world \u9879\u76ee( package )\uff0c\u73b0\u5728\u5728\u5176\u6839\u76ee\u5f55\u4e0b\u65b0\u5efa\u4e00\u4e2a\u5305: # \u5728 hello_world/ \u76ee\u5f55\u4e0b $ cargo new hello_utils \u65b0\u5efa\u7684 hello_utils \u6587\u4ef6\u5939\u8ddf src \u3001 Cargo.toml \u540c\u7ea7\uff0c\u73b0\u5728\u4fee\u6539 Cargo.toml \u8ba9 hello_world \u9879\u76ee\u5f15\u5165\u65b0\u5efa\u7684\u5305: [dependencies] hello_utils = { path = \"hello_utils\" } # \u4ee5\u4e0b\u8def\u5f84\u4e5f\u53ef\u4ee5 # hello_utils = { path = \"./hello_utils\" } # hello_utils = { path = \"../hello_world/hello_utils\" } \u4f46\u662f\uff0c\u6b64\u65f6\u7684 hello_world \u662f\u65e0\u6cd5\u53d1\u5e03\u5230 crates.io \u4e0a\u7684\u3002\u60f3\u8981\u53d1\u5e03\uff0c\u9700\u8981\u5148\u5c06 hello_utils \u5148\u53d1\u5e03\u5230 crates.io \u4e0a\uff0c\u7136\u540e\u518d\u901a\u8fc7 crates.io \u7684\u65b9\u5f0f\u6765\u5f15\u5165: [dependencies] hello_utils = { path = \"hello_utils\", version = \"0.1.0\" } \u6ce8\u610f\uff01\u4f7f\u7528 path \u6307\u5b9a\u4f9d\u8d56\u7684 package \u5c06\u65e0\u6cd5\u53d1\u5e03\u5230 crates.io \uff0c\u9664\u975e path \u5b58\u5728\u4e8e [dev-dependencies] \u4e2d\u3002\u5f53\u7136\uff0c\u4f60\u8fd8\u53ef\u4ee5\u4f7f\u7528\u591a\u79cd\u5f15\u7528\u6df7\u5408\u7684\u65b9\u5f0f\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u4e0b\u9762\u5c06\u8fdb\u884c\u4ecb\u7ecd","title":"\u901a\u8fc7\u8def\u5f84\u5f15\u5165\u672c\u5730\u4f9d\u8d56\u5305"},{"location":"dependencies/#_7","text":"\u5b9e\u9645\u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5\u540c\u65f6\u4f7f\u7528\u591a\u79cd\u65b9\u5f0f\u6765\u5f15\u5165\u540c\u4e00\u4e2a\u5305\uff0c\u4f8b\u5982\u672c\u5730\u5f15\u5165\u548c crates.io : [dependencies] # \u672c\u5730\u4f7f\u7528\u65f6\uff0c\u901a\u8fc7 path \u5f15\u5165, # \u53d1\u5e03\u5230 `crates.io` \u65f6\uff0c\u901a\u8fc7 `crates.io` \u7684\u65b9\u5f0f\u5f15\u5165\uff1a version = \"1.0\" bitflags = { path = \"my-bitflags\", version = \"1.0\" } # \u672c\u5730\u4f7f\u7528\u65f6\uff0c\u901a\u8fc7 git \u4ed3\u5e93\u5f15\u5165 # \u5f53\u53d1\u5e03\u65f6\uff0c\u901a\u8fc7 `crates.io` \u5f15\u5165\uff1a version = \"1.0\" smallvec = { git = \"https://github.com/servo/rust-smallvec\", version = \"1.0\" } # N.B. \u82e5 version \u65e0\u6cd5\u5339\u914d\uff0cCargo \u5c06\u65e0\u6cd5\u7f16\u8bd1 \u8fd9\u79cd\u65b9\u5f0f\u8ddf\u4e0b\u7ae0\u8282\u5c06\u8981\u8bb2\u8ff0\u7684\u4f9d\u8d56\u8986\u76d6\u7c7b\u4f3c\uff0c\u4f46\u662f\u524d\u8005\u53ea\u4f1a\u5e94\u7528\u5230\u5f53\u524d\u58f0\u660e\u7684\u4f9d\u8d56\u5305\u4e0a\u3002","title":"\u591a\u5f15\u7528\u65b9\u5f0f\u6df7\u5408"},{"location":"dependencies/#_8","text":"\u6211\u4eec\u8fd8\u53ef\u4ee5\u6839\u636e\u7279\u5b9a\u7684\u5e73\u53f0\u6765\u5f15\u5165\u4f9d\u8d56: [target.'cfg(windows)'.dependencies] winhttp = \"0.4.0\" [target.'cfg(unix)'.dependencies] openssl = \"1.0.1\" [target.'cfg(target_arch = \"x86\")'.dependencies] native = { path = \"native/i686\" } [target.'cfg(target_arch = \"x86_64\")'.dependencies] native = { path = \"native/x86_64\" } \u6b64\u5904\u7684\u8bed\u6cd5\u8ddf Rust \u7684 #[cfg] \u8bed\u6cd5\u975e\u5e38\u76f8\u50cf\uff0c\u56e0\u6b64\u6211\u4eec\u8fd8\u80fd\u4f7f\u7528\u903b\u8f91\u64cd\u4f5c\u7b26\u8fdb\u884c\u63a7\u5236: [target.'cfg(not(unix))'.dependencies] openssl = \"1.0.1\" \u8fd9\u91cc\u7684\u610f\u601d\u662f\uff0c\u5f53\u4e0d\u662f unix \u64cd\u4f5c\u7cfb\u7edf\u65f6\uff0c\u624d\u5bf9 openssl \u8fdb\u884c\u5f15\u5165\u3002 \u5982\u679c\u4f60\u60f3\u8981\u77e5\u9053 cfg \u80fd\u591f\u4f5c\u7528\u7684\u76ee\u6807\uff0c\u53ef\u4ee5\u5728\u7ec8\u7aef\u4e2d\u8fd0\u884c rustc --print=cfg \u8fdb\u884c\u67e5\u8be2\u3002\u5f53\u7136\uff0c\u4f60\u53ef\u4ee5\u6307\u5b9a\u5e73\u53f0\u67e5\u8be2: rustc --print=cfg --target=x86_64-pc-windows-msvc \uff0c\u8be5\u547d\u4ee4\u5c06\u5bf9 64bit \u7684 Windows \u8fdb\u884c\u67e5\u8be2\u3002 \u806a\u660e\u7684\u540c\u5b66\u5df2\u7ecf\u53d1\u73b0\uff0c\u8fd9\u975e\u5e38\u7c7b\u4f3c\u4e8e\u6761\u4ef6\u4f9d\u8d56\u5f15\u5165\uff0c\u90a3\u6211\u4eec\u662f\u4e0d\u662f\u53ef\u4ee5\u6839\u636e\u81ea\u5b9a\u4e49\u7684\u6761\u4ef6\u6765\u51b3\u5b9a\u662f\u5426\u5f15\u5165\u67d0\u4e2a\u4f9d\u8d56\u5462\uff1f\u5177\u4f53\u7b54\u6848\u53c2\u89c1\u540e\u7eed\u7684 feature \u7ae0\u8282\u3002\u8fd9\u91cc\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b: [dependencies] foo = { version = \"1.0\", optional = true } bar = { version = \"1.0\", optional = true } [features] fancy-feature = [\"foo\", \"bar\"] \u4f46\u662f\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u4f60\u5982\u679c\u5984\u56fe\u901a\u8fc7 cfg(feature) \u3001 cfg(debug_assertions) , cfg(test) \u548c cfg(proc_macro) \u7684\u65b9\u5f0f\u6765\u6761\u4ef6\u5f15\u5165\u4f9d\u8d56\uff0c\u90a3\u662f\u4e0d\u53ef\u884c\u7684\u3002 Cargo \u8fd8\u5141\u8bb8\u901a\u8fc7\u4e0b\u9762\u7684\u65b9\u5f0f\u6765\u5f15\u5165\u5e73\u53f0\u7279\u5b9a\u7684\u4f9d\u8d56: [target.x86_64-pc-windows-gnu.dependencies] winhttp = \"0.4.0\" [target.i686-unknown-linux-gnu.dependencies] openssl = \"1.0.1\"","title":"\u6839\u636e\u5e73\u53f0\u5f15\u5165\u4f9d\u8d56"},{"location":"dependencies/#target","text":"\u5982\u679c\u4f60\u5728\u4f7f\u7528\u81ea\u5b9a\u4e49\u7684 target \uff1a\u4f8b\u5982 --target bar.json \uff0c\u90a3\u4e48\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u65b9\u5f0f\u6765\u5f15\u5165\u4f9d\u8d56: [target.bar.dependencies] winhttp = \"0.4.0\" [target.my-special-i686-platform.dependencies] openssl = \"1.0.1\" native = { path = \"native/i686\" } \u9700\u8981\u6ce8\u610f\uff0c\u8fd9\u79cd\u4f7f\u7528\u65b9\u5f0f\u5728 stable \u7248\u672c\u7684 Rust \u4e2d\u65e0\u6cd5\u88ab\u4f7f\u7528\uff0c\u5efa\u8bae\u5927\u5bb6\u5982\u679c\u6ca1\u6709\u7279\u522b\u7684\u9700\u6c42\uff0c\u8fd8\u662f\u4f7f\u7528\u4e4b\u524d\u63d0\u5230\u7684 feature \u65b9\u5f0f","title":"\u81ea\u5b9a\u4e49 target \u5f15\u5165"},{"location":"dependencies/#dev-dependencies","text":"\u4f60\u8fd8\u53ef\u4ee5\u4e3a\u9879\u76ee\u6dfb\u52a0\u53ea\u5728\u6d4b\u8bd5\u65f6\u9700\u8981\u7684\u4f9d\u8d56\u5e93\uff0c\u7c7b\u4f3c\u4e8e package.json ( Nodejs )\u6587\u4ef6\u4e2d\u7684 devDependencies \uff0c\u53ef\u4ee5\u5728 Cargo.toml \u4e2d\u6dfb\u52a0 [dev-dependencies] \u6765\u5b9e\u73b0: [dev-dependencies] tempdir = \"0.3\" \u8fd9\u91cc\u7684\u4f9d\u8d56\u53ea\u4f1a\u5728\u8fd0\u884c\u6d4b\u8bd5\u3001\u793a\u4f8b\u548c benchmark \u65f6\u624d\u4f1a\u88ab\u5f15\u5165\u3002\u5e76\u4e14\uff0c\u5047\u8bbe A \u5305\u5f15\u7528\u4e86 B \uff0c\u800c B \u901a\u8fc7 [dev-dependencies] \u7684\u65b9\u5f0f\u5f15\u7528\u4e86 C \u5305\uff0c \u90a3 A \u662f\u4e0d\u4f1a\u5f15\u7528 C \u5305\u7684\u3002 \u5f53\u7136\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u6307\u5b9a\u5e73\u53f0\u7279\u5b9a\u7684\u6d4b\u8bd5\u4f9d\u8d56\u5305: [target.'cfg(unix)'.dev-dependencies] mio = \"0.0.1\" \u6ce8\u610f\uff0c\u5f53\u53d1\u5e03\u5305\u5230 crates.io \u65f6\uff0c [dev-dependencies] \u4e2d\u7684\u4f9d\u8d56\u53ea\u6709\u6307\u5b9a\u4e86 version \u7684\u624d\u4f1a\u88ab\u5305\u542b\u5728\u53d1\u5e03\u5305\u4e2d\u3002\u51b5\u4e14\uff0c\u518d\u52a0\u4e0a\u6d4b\u8bd5\u7a33\u5b9a\u6027\u7684\u8003\u8651\uff0c\u6211\u4eec\u5efa\u8bae\u4e3a [dev-dependencies] \u4e2d\u7684\u5305\u6307\u5b9a\u76f8\u5e94\u7684\u7248\u672c\u53f7","title":"[dev-dependencies]"},{"location":"dependencies/#build-dependencies","text":"\u6211\u4eec\u8fd8\u53ef\u4ee5\u6307\u5b9a\u67d0\u4e9b\u4f9d\u8d56\u4ec5\u7528\u4e8e\u6784\u5efa\u811a\u672c: [build-dependencies] cc = \"1.0.3\" \u5f53\u7136\uff0c\u5e73\u53f0\u7279\u5b9a\u7684\u4f9d\u7136\u53ef\u4ee5\u4f7f\u7528\uff1a [target.'cfg(unix)'.build-dependencies] cc = \"1.0.3\" \u6709\u4e00\u70b9\u9700\u8981\u6ce8\u610f\uff1a\u6784\u5efa\u811a\u672c( <span> </span>build.rs )\u548c\u9879\u76ee\u7684\u6b63\u5e38\u4ee3\u7801\u662f\u5f7c\u6b64\u72ec\u7acb\uff0c\u56e0\u6b64\u5b83\u4eec\u7684\u4f9d\u8d56\u4e0d\u80fd\u4e92\u901a\uff1a \u6784\u5efa\u811a\u672c\u65e0\u6cd5\u4f7f\u7528 [dependencies] \u6216 [dev-dependencies] \u4e2d\u7684\u4f9d\u8d56\uff0c\u800c [build-dependencies] \u4e2d\u7684\u4f9d\u8d56\u4e5f\u65e0\u6cd5\u88ab\u6784\u5efa\u811a\u672c\u4e4b\u5916\u7684\u4ee3\u7801\u6240\u4f7f\u7528\u3002","title":"[build-dependencies]"},{"location":"dependencies/#features","text":"\u5982\u679c\u4f60\u4f9d\u8d56\u7684\u5305\u63d0\u4f9b\u4e86\u6761\u4ef6\u6027\u7684 features \uff0c\u4f60\u53ef\u4ee5\u6307\u5b9a\u4f7f\u7528\u54ea\u4e00\u4e2a: [dependencies.awesome] version = \"1.3.5\" default-features = false # \u4e0d\u8981\u5305\u542b\u9ed8\u8ba4\u7684 features\uff0c\u800c\u662f\u901a\u8fc7\u4e0b\u9762\u7684\u65b9\u5f0f\u6765\u6307\u5b9a features = [\"secure-password\", \"civet\"] \u66f4\u591a\u7684\u4fe1\u606f\u53c2\u89c1 Features \u7ae0\u8282","title":"\u9009\u62e9 features"},{"location":"dependencies/#cargotoml","text":"\u5982\u679c\u4f60\u60f3\u8981\u5b9e\u73b0\u4ee5\u4e0b\u76ee\u6807\uff1a \u907f\u514d\u5728 Rust \u4ee3\u7801\u4e2d\u4f7f\u7528 use foo as bar \u4f9d\u8d56\u67d0\u4e2a\u5305\u7684\u591a\u4e2a\u7248\u672c \u4f9d\u8d56\u6765\u81ea\u4e8e\u4e0d\u540c\u6ce8\u518c\u670d\u52a1\u7684\u540c\u540d\u5305 \u90a3\u53ef\u4ee5\u4f7f\u7528 Cargo \u63d0\u4f9b\u7684 package key : [package] name = \"mypackage\" version = \"0.0.1\" [dependencies] foo = \"0.1\" bar = { git = \"https://github.com/example/project\", package = \"foo\" } baz = { version = \"0.1\", registry = \"custom\", package = \"foo\" } \u6b64\u65f6\uff0c\u4f60\u7684\u4ee3\u7801\u4e2d\u53ef\u4ee5\u4f7f\u7528\u4e09\u4e2a\u5305\uff1a extern crate foo; // \u6765\u81ea crates.io extern crate bar; // \u6765\u81ea git repository extern crate baz; // \u6765\u81ea registry `custom` \u6709\u8da3\u7684\u662f\uff0c\u7531\u4e8e\u8fd9\u4e09\u4e2a package \u7684\u540d\u79f0\u90fd\u662f foo (\u5728\u5404\u81ea\u7684 Cargo.toml \u4e2d\u5b9a\u4e49)\uff0c\u56e0\u6b64\u6211\u4eec\u663e\u5f0f\u7684\u901a\u8fc7 package = \"foo\" \u7684\u65b9\u5f0f\u544a\u8bc9 Cargo\uff1a\u6211\u4eec\u9700\u8981\u7684\u5c31\u662f\u8fd9\u4e2a foo package \uff0c\u867d\u7136\u5b83\u88ab\u91cd\u547d\u540d\u4e3a bar \u6216 baz \u3002 \u6709\u4e00\u70b9\u9700\u8981\u6ce8\u610f\uff0c\u5f53\u4f7f\u7528\u53ef\u9009\u4f9d\u8d56\u65f6\uff0c\u5982\u679c\u4f60\u5c06 foo \u5305\u91cd\u547d\u540d\u4e3a bar \u5305\uff0c\u90a3\u5f15\u7528\u524d\u8005\u7684 feature \u65f6\u7684\u8def\u5f84\u540d\u4e5f\u8981\u505a\u76f8\u5e94\u7684\u4fee\u6539: [dependencies] bar = { version = \"0.1\", package = 'foo', optional = true } [features] log-debug = ['bar/log-debug'] # \u82e5\u4f7f\u7528 'foo/log-debug' \u4f1a\u5bfc\u81f4\u62a5\u9519","title":"\u5728 Cargo.toml \u4e2d\u91cd\u547d\u540d\u4f9d\u8d56"},{"location":"dependencies/#-rustrust-course","text":"","title":"\u53c2\u8003\uff1a\u6307\u5b9a\u4f9d\u8d56\u9879 - Rust\u8bed\u8a00\u5723\u7ecf(Rust Course)"},{"location":"lib-list/","text":"Rust \u5e93\u5217\u8868 windows","title":"\u5e93\u5217\u8868"},{"location":"lib-list/#rust","text":"windows","title":"Rust \u5e93\u5217\u8868"},{"location":"license/","text":"License","title":"License"},{"location":"license/#license","text":"","title":"License"},{"location":"std-ops/","text":"ops \u6a21\u5757\u662f\u4e00\u4e9b\u8fd0\u7b97\u7b26\u7684\u91cd\u8f7d\u529f\u80fd\u7684\u96c6\u5408 Example use std::ops::{Add, Sub}; #[derive(Debug, Copy, Clone, PartialEq)] struct Point { x: i32, y: i32, } impl Add for Point { type Output = Self; fn add(self, other: Self) -> Self { Self {x: self.x + other.x, y: self.y + other.y} } } impl Sub for Point { type Output = Self; fn sub(self, other: Self) -> Self { Self {x: self.x - other.x, y: self.y - other.y} } } fn main() { let p1 = Point { x: 1, y: 10 }; let p2 = Point { x: 20, y: 40 }; println!(\"{:#?}\", p1 - p2); } \u8f93\u51fa\u7ed3\u679c\uff1a Finished dev [unoptimized + debuginfo] target(s) in 0.08s Running `target\\debug\\grrs.exe` Point { x: -19, y: -30, }","title":"ops \u6a21\u5757"},{"location":"std-ops/#ops","text":"","title":"ops \u6a21\u5757\u662f\u4e00\u4e9b\u8fd0\u7b97\u7b26\u7684\u91cd\u8f7d\u529f\u80fd\u7684\u96c6\u5408"},{"location":"std-ops/#example","text":"use std::ops::{Add, Sub}; #[derive(Debug, Copy, Clone, PartialEq)] struct Point { x: i32, y: i32, } impl Add for Point { type Output = Self; fn add(self, other: Self) -> Self { Self {x: self.x + other.x, y: self.y + other.y} } } impl Sub for Point { type Output = Self; fn sub(self, other: Self) -> Self { Self {x: self.x - other.x, y: self.y - other.y} } } fn main() { let p1 = Point { x: 1, y: 10 }; let p2 = Point { x: 20, y: 40 }; println!(\"{:#?}\", p1 - p2); } \u8f93\u51fa\u7ed3\u679c\uff1a Finished dev [unoptimized + debuginfo] target(s) in 0.08s Running `target\\debug\\grrs.exe` Point { x: -19, y: -30, }","title":"Example"},{"location":"struct/","text":"","title":"\u7ed3\u6784\u4f53"},{"location":"%E6%9E%9A%E4%B8%BE/","text":"","title":"\u679a\u4e3e"}]}